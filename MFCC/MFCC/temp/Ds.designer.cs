//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.1433
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace temp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Ds")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Ds : global::System.Data.DataSet {
        
        private tblFileAttrDataTable tabletblFileAttr;
        
        private tblSecTrafficDataDataTable tabletblSecTrafficData;
        
        private tblRGS_ConfigDataTable tabletblRGS_Config;
        
        private tblIconsDataTable tabletblIcons;
        
        private tblRGSMainDataTable tabletblRGSMain;
        
        private tblRGSModeDataTable tabletblRGSMode;
        
        private tblRmsConfigDataTable tabletblRmsConfig;
        
        private tblRMSModeDataTable tabletblRMSMode;
        
        private global::System.Data.DataRelation relationtblRGSMain_tblRGS_Config;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Ds() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Ds(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblFileAttr"] != null)) {
                    base.Tables.Add(new tblFileAttrDataTable(ds.Tables["tblFileAttr"]));
                }
                if ((ds.Tables["tblSecTrafficData"] != null)) {
                    base.Tables.Add(new tblSecTrafficDataDataTable(ds.Tables["tblSecTrafficData"]));
                }
                if ((ds.Tables["tblRGS_Config"] != null)) {
                    base.Tables.Add(new tblRGS_ConfigDataTable(ds.Tables["tblRGS_Config"]));
                }
                if ((ds.Tables["tblIcons"] != null)) {
                    base.Tables.Add(new tblIconsDataTable(ds.Tables["tblIcons"]));
                }
                if ((ds.Tables["tblRGSMain"] != null)) {
                    base.Tables.Add(new tblRGSMainDataTable(ds.Tables["tblRGSMain"]));
                }
                if ((ds.Tables["tblRGSMode"] != null)) {
                    base.Tables.Add(new tblRGSModeDataTable(ds.Tables["tblRGSMode"]));
                }
                if ((ds.Tables["tblRmsConfig"] != null)) {
                    base.Tables.Add(new tblRmsConfigDataTable(ds.Tables["tblRmsConfig"]));
                }
                if ((ds.Tables["tblRMSMode"] != null)) {
                    base.Tables.Add(new tblRMSModeDataTable(ds.Tables["tblRMSMode"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblFileAttrDataTable tblFileAttr {
            get {
                return this.tabletblFileAttr;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblSecTrafficDataDataTable tblSecTrafficData {
            get {
                return this.tabletblSecTrafficData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRGS_ConfigDataTable tblRGS_Config {
            get {
                return this.tabletblRGS_Config;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblIconsDataTable tblIcons {
            get {
                return this.tabletblIcons;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRGSMainDataTable tblRGSMain {
            get {
                return this.tabletblRGSMain;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRGSModeDataTable tblRGSMode {
            get {
                return this.tabletblRGSMode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRmsConfigDataTable tblRmsConfig {
            get {
                return this.tabletblRmsConfig;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRMSModeDataTable tblRMSMode {
            get {
                return this.tabletblRMSMode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Ds cln = ((Ds)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tblFileAttr"] != null)) {
                    base.Tables.Add(new tblFileAttrDataTable(ds.Tables["tblFileAttr"]));
                }
                if ((ds.Tables["tblSecTrafficData"] != null)) {
                    base.Tables.Add(new tblSecTrafficDataDataTable(ds.Tables["tblSecTrafficData"]));
                }
                if ((ds.Tables["tblRGS_Config"] != null)) {
                    base.Tables.Add(new tblRGS_ConfigDataTable(ds.Tables["tblRGS_Config"]));
                }
                if ((ds.Tables["tblIcons"] != null)) {
                    base.Tables.Add(new tblIconsDataTable(ds.Tables["tblIcons"]));
                }
                if ((ds.Tables["tblRGSMain"] != null)) {
                    base.Tables.Add(new tblRGSMainDataTable(ds.Tables["tblRGSMain"]));
                }
                if ((ds.Tables["tblRGSMode"] != null)) {
                    base.Tables.Add(new tblRGSModeDataTable(ds.Tables["tblRGSMode"]));
                }
                if ((ds.Tables["tblRmsConfig"] != null)) {
                    base.Tables.Add(new tblRmsConfigDataTable(ds.Tables["tblRmsConfig"]));
                }
                if ((ds.Tables["tblRMSMode"] != null)) {
                    base.Tables.Add(new tblRMSModeDataTable(ds.Tables["tblRMSMode"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletblFileAttr = ((tblFileAttrDataTable)(base.Tables["tblFileAttr"]));
            if ((initTable == true)) {
                if ((this.tabletblFileAttr != null)) {
                    this.tabletblFileAttr.InitVars();
                }
            }
            this.tabletblSecTrafficData = ((tblSecTrafficDataDataTable)(base.Tables["tblSecTrafficData"]));
            if ((initTable == true)) {
                if ((this.tabletblSecTrafficData != null)) {
                    this.tabletblSecTrafficData.InitVars();
                }
            }
            this.tabletblRGS_Config = ((tblRGS_ConfigDataTable)(base.Tables["tblRGS_Config"]));
            if ((initTable == true)) {
                if ((this.tabletblRGS_Config != null)) {
                    this.tabletblRGS_Config.InitVars();
                }
            }
            this.tabletblIcons = ((tblIconsDataTable)(base.Tables["tblIcons"]));
            if ((initTable == true)) {
                if ((this.tabletblIcons != null)) {
                    this.tabletblIcons.InitVars();
                }
            }
            this.tabletblRGSMain = ((tblRGSMainDataTable)(base.Tables["tblRGSMain"]));
            if ((initTable == true)) {
                if ((this.tabletblRGSMain != null)) {
                    this.tabletblRGSMain.InitVars();
                }
            }
            this.tabletblRGSMode = ((tblRGSModeDataTable)(base.Tables["tblRGSMode"]));
            if ((initTable == true)) {
                if ((this.tabletblRGSMode != null)) {
                    this.tabletblRGSMode.InitVars();
                }
            }
            this.tabletblRmsConfig = ((tblRmsConfigDataTable)(base.Tables["tblRmsConfig"]));
            if ((initTable == true)) {
                if ((this.tabletblRmsConfig != null)) {
                    this.tabletblRmsConfig.InitVars();
                }
            }
            this.tabletblRMSMode = ((tblRMSModeDataTable)(base.Tables["tblRMSMode"]));
            if ((initTable == true)) {
                if ((this.tabletblRMSMode != null)) {
                    this.tabletblRMSMode.InitVars();
                }
            }
            this.relationtblRGSMain_tblRGS_Config = this.Relations["tblRGSMain_tblRGS_Config"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Ds";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Ds.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletblFileAttr = new tblFileAttrDataTable();
            base.Tables.Add(this.tabletblFileAttr);
            this.tabletblSecTrafficData = new tblSecTrafficDataDataTable();
            base.Tables.Add(this.tabletblSecTrafficData);
            this.tabletblRGS_Config = new tblRGS_ConfigDataTable();
            base.Tables.Add(this.tabletblRGS_Config);
            this.tabletblIcons = new tblIconsDataTable();
            base.Tables.Add(this.tabletblIcons);
            this.tabletblRGSMain = new tblRGSMainDataTable();
            base.Tables.Add(this.tabletblRGSMain);
            this.tabletblRGSMode = new tblRGSModeDataTable();
            base.Tables.Add(this.tabletblRGSMode);
            this.tabletblRmsConfig = new tblRmsConfigDataTable();
            base.Tables.Add(this.tabletblRmsConfig);
            this.tabletblRMSMode = new tblRMSModeDataTable();
            base.Tables.Add(this.tabletblRMSMode);
            this.relationtblRGSMain_tblRGS_Config = new global::System.Data.DataRelation("tblRGSMain_tblRGS_Config", new global::System.Data.DataColumn[] {
                        this.tabletblRGSMain.ipColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblRGS_Config.ipColumn}, false);
            this.Relations.Add(this.relationtblRGSMain_tblRGS_Config);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblFileAttr() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblSecTrafficData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblRGS_Config() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblIcons() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblRGSMain() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblRGSMode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblRmsConfig() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblRMSMode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Ds ds = new Ds();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tblFileAttrRowChangeEventHandler(object sender, tblFileAttrRowChangeEvent e);
        
        public delegate void tblSecTrafficDataRowChangeEventHandler(object sender, tblSecTrafficDataRowChangeEvent e);
        
        public delegate void tblRGS_ConfigRowChangeEventHandler(object sender, tblRGS_ConfigRowChangeEvent e);
        
        public delegate void tblIconsRowChangeEventHandler(object sender, tblIconsRowChangeEvent e);
        
        public delegate void tblRGSMainRowChangeEventHandler(object sender, tblRGSMainRowChangeEvent e);
        
        public delegate void tblRGSModeRowChangeEventHandler(object sender, tblRGSModeRowChangeEvent e);
        
        public delegate void tblRmsConfigRowChangeEventHandler(object sender, tblRmsConfigRowChangeEvent e);
        
        public delegate void tblRMSModeRowChangeEventHandler(object sender, tblRMSModeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblFileAttrDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFileAttrDataTable() {
                this.TableName = "tblFileAttr";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblFileAttrDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblFileAttrDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn timeColumn {
                get {
                    return this.columntime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFileAttrRow this[int index] {
                get {
                    return ((tblFileAttrRow)(this.Rows[index]));
                }
            }
            
            public event tblFileAttrRowChangeEventHandler tblFileAttrRowChanging;
            
            public event tblFileAttrRowChangeEventHandler tblFileAttrRowChanged;
            
            public event tblFileAttrRowChangeEventHandler tblFileAttrRowDeleting;
            
            public event tblFileAttrRowChangeEventHandler tblFileAttrRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblFileAttrRow(tblFileAttrRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFileAttrRow AddtblFileAttrRow(System.DateTime time) {
                tblFileAttrRow rowtblFileAttrRow = ((tblFileAttrRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        time};
                rowtblFileAttrRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblFileAttrRow);
                return rowtblFileAttrRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblFileAttrDataTable cln = ((tblFileAttrDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblFileAttrDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntime = base.Columns["time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntime = new global::System.Data.DataColumn("time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFileAttrRow NewtblFileAttrRow() {
                return ((tblFileAttrRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblFileAttrRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblFileAttrRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblFileAttrRowChanged != null)) {
                    this.tblFileAttrRowChanged(this, new tblFileAttrRowChangeEvent(((tblFileAttrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblFileAttrRowChanging != null)) {
                    this.tblFileAttrRowChanging(this, new tblFileAttrRowChangeEvent(((tblFileAttrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblFileAttrRowDeleted != null)) {
                    this.tblFileAttrRowDeleted(this, new tblFileAttrRowChangeEvent(((tblFileAttrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblFileAttrRowDeleting != null)) {
                    this.tblFileAttrRowDeleting(this, new tblFileAttrRowChangeEvent(((tblFileAttrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblFileAttrRow(tblFileAttrRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Ds ds = new Ds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblFileAttrDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblSecTrafficDataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnfreewayId;
            
            private global::System.Data.DataColumn columnexpresswayId;
            
            private global::System.Data.DataColumn columndirectionId;
            
            private global::System.Data.DataColumn columnfrom_location;
            
            private global::System.Data.DataColumn columnfrom_milepost;
            
            private global::System.Data.DataColumn columnend_location;
            
            private global::System.Data.DataColumn columnend_milepost;
            
            private global::System.Data.DataColumn columnsection_upper_limit;
            
            private global::System.Data.DataColumn columnsection_lower_limit;
            
            private global::System.Data.DataColumn columntravel_time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecTrafficDataDataTable() {
                this.TableName = "tblSecTrafficData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSecTrafficDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblSecTrafficDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn freewayIdColumn {
                get {
                    return this.columnfreewayId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expresswayIdColumn {
                get {
                    return this.columnexpresswayId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn directionIdColumn {
                get {
                    return this.columndirectionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn from_locationColumn {
                get {
                    return this.columnfrom_location;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn from_milepostColumn {
                get {
                    return this.columnfrom_milepost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_locationColumn {
                get {
                    return this.columnend_location;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_milepostColumn {
                get {
                    return this.columnend_milepost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn section_upper_limitColumn {
                get {
                    return this.columnsection_upper_limit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn section_lower_limitColumn {
                get {
                    return this.columnsection_lower_limit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn travel_timeColumn {
                get {
                    return this.columntravel_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecTrafficDataRow this[int index] {
                get {
                    return ((tblSecTrafficDataRow)(this.Rows[index]));
                }
            }
            
            public event tblSecTrafficDataRowChangeEventHandler tblSecTrafficDataRowChanging;
            
            public event tblSecTrafficDataRowChangeEventHandler tblSecTrafficDataRowChanged;
            
            public event tblSecTrafficDataRowChangeEventHandler tblSecTrafficDataRowDeleting;
            
            public event tblSecTrafficDataRowChangeEventHandler tblSecTrafficDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblSecTrafficDataRow(tblSecTrafficDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecTrafficDataRow AddtblSecTrafficDataRow(string freewayId, string expresswayId, string directionId, string from_location, uint from_milepost, string end_location, uint end_milepost, uint section_upper_limit, uint section_lower_limit, float travel_time) {
                tblSecTrafficDataRow rowtblSecTrafficDataRow = ((tblSecTrafficDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        freewayId,
                        expresswayId,
                        directionId,
                        from_location,
                        from_milepost,
                        end_location,
                        end_milepost,
                        section_upper_limit,
                        section_lower_limit,
                        travel_time};
                rowtblSecTrafficDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblSecTrafficDataRow);
                return rowtblSecTrafficDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblSecTrafficDataDataTable cln = ((tblSecTrafficDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblSecTrafficDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnfreewayId = base.Columns["freewayId"];
                this.columnexpresswayId = base.Columns["expresswayId"];
                this.columndirectionId = base.Columns["directionId"];
                this.columnfrom_location = base.Columns["from_location"];
                this.columnfrom_milepost = base.Columns["from_milepost"];
                this.columnend_location = base.Columns["end_location"];
                this.columnend_milepost = base.Columns["end_milepost"];
                this.columnsection_upper_limit = base.Columns["section_upper_limit"];
                this.columnsection_lower_limit = base.Columns["section_lower_limit"];
                this.columntravel_time = base.Columns["travel_time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnfreewayId = new global::System.Data.DataColumn("freewayId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfreewayId);
                this.columnexpresswayId = new global::System.Data.DataColumn("expresswayId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpresswayId);
                this.columndirectionId = new global::System.Data.DataColumn("directionId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndirectionId);
                this.columnfrom_location = new global::System.Data.DataColumn("from_location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrom_location);
                this.columnfrom_milepost = new global::System.Data.DataColumn("from_milepost", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrom_milepost);
                this.columnend_location = new global::System.Data.DataColumn("end_location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_location);
                this.columnend_milepost = new global::System.Data.DataColumn("end_milepost", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_milepost);
                this.columnsection_upper_limit = new global::System.Data.DataColumn("section_upper_limit", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsection_upper_limit);
                this.columnsection_lower_limit = new global::System.Data.DataColumn("section_lower_limit", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsection_lower_limit);
                this.columntravel_time = new global::System.Data.DataColumn("travel_time", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntravel_time);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecTrafficDataRow NewtblSecTrafficDataRow() {
                return ((tblSecTrafficDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblSecTrafficDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblSecTrafficDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblSecTrafficDataRowChanged != null)) {
                    this.tblSecTrafficDataRowChanged(this, new tblSecTrafficDataRowChangeEvent(((tblSecTrafficDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblSecTrafficDataRowChanging != null)) {
                    this.tblSecTrafficDataRowChanging(this, new tblSecTrafficDataRowChangeEvent(((tblSecTrafficDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblSecTrafficDataRowDeleted != null)) {
                    this.tblSecTrafficDataRowDeleted(this, new tblSecTrafficDataRowChangeEvent(((tblSecTrafficDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblSecTrafficDataRowDeleting != null)) {
                    this.tblSecTrafficDataRowDeleting(this, new tblSecTrafficDataRowChangeEvent(((tblSecTrafficDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblSecTrafficDataRow(tblSecTrafficDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Ds ds = new Ds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblSecTrafficDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRGS_ConfigDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrgs_name;
            
            private global::System.Data.DataColumn columnip;
            
            private global::System.Data.DataColumn columnport;
            
            private global::System.Data.DataColumn columndeviec_id;
            
            private global::System.Data.DataColumn columndisplay_part;
            
            private global::System.Data.DataColumn columnfreewayId;
            
            private global::System.Data.DataColumn columnlocation;
            
            private global::System.Data.DataColumn columndirection;
            
            private global::System.Data.DataColumn columnfrom_milepost;
            
            private global::System.Data.DataColumn columnend_milepost;
            
            private global::System.Data.DataColumn columniconid;
            
            private global::System.Data.DataColumn columnmsg_temp1;
            
            private global::System.Data.DataColumn columnmsg_temp2;
            
            private global::System.Data.DataColumn columnmessage1;
            
            private global::System.Data.DataColumn columnmessage2;
            
            private global::System.Data.DataColumn columnmode;
            
            private global::System.Data.DataColumn columnficon;
            
            private global::System.Data.DataColumn columnfinput1;
            
            private global::System.Data.DataColumn columnfinput2;
            
            private global::System.Data.DataColumn columntraveltime;
            
            private global::System.Data.DataColumn columnlowerlimit;
            
            private global::System.Data.DataColumn columnupperlimit;
            
            private global::System.Data.DataColumn columnmessageColor1;
            
            private global::System.Data.DataColumn columnmessageColor2;
            
            private global::System.Data.DataColumn columnfinputColor1;
            
            private global::System.Data.DataColumn columnfinputColor2;
            
            private global::System.Data.DataColumn columncurr_icon;
            
            private global::System.Data.DataColumn columncurr_msg1;
            
            private global::System.Data.DataColumn columncurr_msg2;
            
            private global::System.Data.DataColumn columnconnected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGS_ConfigDataTable() {
                this.TableName = "tblRGS_Config";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRGS_ConfigDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblRGS_ConfigDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rgs_nameColumn {
                get {
                    return this.columnrgs_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ipColumn {
                get {
                    return this.columnip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn portColumn {
                get {
                    return this.columnport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deviec_idColumn {
                get {
                    return this.columndeviec_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn display_partColumn {
                get {
                    return this.columndisplay_part;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn freewayIdColumn {
                get {
                    return this.columnfreewayId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn locationColumn {
                get {
                    return this.columnlocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn directionColumn {
                get {
                    return this.columndirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn from_milepostColumn {
                get {
                    return this.columnfrom_milepost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_milepostColumn {
                get {
                    return this.columnend_milepost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iconidColumn {
                get {
                    return this.columniconid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn msg_temp1Column {
                get {
                    return this.columnmsg_temp1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn msg_temp2Column {
                get {
                    return this.columnmsg_temp2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn message1Column {
                get {
                    return this.columnmessage1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn message2Column {
                get {
                    return this.columnmessage2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modeColumn {
                get {
                    return this.columnmode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ficonColumn {
                get {
                    return this.columnficon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn finput1Column {
                get {
                    return this.columnfinput1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn finput2Column {
                get {
                    return this.columnfinput2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn traveltimeColumn {
                get {
                    return this.columntraveltime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lowerlimitColumn {
                get {
                    return this.columnlowerlimit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn upperlimitColumn {
                get {
                    return this.columnupperlimit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn messageColor1Column {
                get {
                    return this.columnmessageColor1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn messageColor2Column {
                get {
                    return this.columnmessageColor2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn finputColor1Column {
                get {
                    return this.columnfinputColor1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn finputColor2Column {
                get {
                    return this.columnfinputColor2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn curr_iconColumn {
                get {
                    return this.columncurr_icon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn curr_msg1Column {
                get {
                    return this.columncurr_msg1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn curr_msg2Column {
                get {
                    return this.columncurr_msg2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn connectedColumn {
                get {
                    return this.columnconnected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGS_ConfigRow this[int index] {
                get {
                    return ((tblRGS_ConfigRow)(this.Rows[index]));
                }
            }
            
            public event tblRGS_ConfigRowChangeEventHandler tblRGS_ConfigRowChanging;
            
            public event tblRGS_ConfigRowChangeEventHandler tblRGS_ConfigRowChanged;
            
            public event tblRGS_ConfigRowChangeEventHandler tblRGS_ConfigRowDeleting;
            
            public event tblRGS_ConfigRowChangeEventHandler tblRGS_ConfigRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblRGS_ConfigRow(tblRGS_ConfigRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGS_ConfigRow AddtblRGS_ConfigRow(
                        string rgs_name, 
                        tblRGSMainRow parenttblRGSMainRowBytblRGSMain_tblRGS_Config, 
                        uint port, 
                        string deviec_id, 
                        byte display_part, 
                        string freewayId, 
                        uint location, 
                        string direction, 
                        uint from_milepost, 
                        uint end_milepost, 
                        byte iconid, 
                        string msg_temp1, 
                        string msg_temp2, 
                        string message1, 
                        string message2, 
                        byte mode, 
                        byte ficon, 
                        string finput1, 
                        string finput2, 
                        float traveltime, 
                        uint lowerlimit, 
                        uint upperlimit, 
                        string messageColor1, 
                        string messageColor2, 
                        string finputColor1, 
                        string finputColor2, 
                        byte curr_icon, 
                        string curr_msg1, 
                        string curr_msg2, 
                        bool connected) {
                tblRGS_ConfigRow rowtblRGS_ConfigRow = ((tblRGS_ConfigRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        rgs_name,
                        null,
                        port,
                        deviec_id,
                        display_part,
                        freewayId,
                        location,
                        direction,
                        from_milepost,
                        end_milepost,
                        iconid,
                        msg_temp1,
                        msg_temp2,
                        message1,
                        message2,
                        mode,
                        ficon,
                        finput1,
                        finput2,
                        traveltime,
                        lowerlimit,
                        upperlimit,
                        messageColor1,
                        messageColor2,
                        finputColor1,
                        finputColor2,
                        curr_icon,
                        curr_msg1,
                        curr_msg2,
                        connected};
                if ((parenttblRGSMainRowBytblRGSMain_tblRGS_Config != null)) {
                    columnValuesArray[1] = parenttblRGSMainRowBytblRGSMain_tblRGS_Config[1];
                }
                rowtblRGS_ConfigRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRGS_ConfigRow);
                return rowtblRGS_ConfigRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGS_ConfigRow FindByipdisplay_part(string ip, byte display_part) {
                return ((tblRGS_ConfigRow)(this.Rows.Find(new object[] {
                            ip,
                            display_part})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblRGS_ConfigDataTable cln = ((tblRGS_ConfigDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRGS_ConfigDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrgs_name = base.Columns["rgs_name"];
                this.columnip = base.Columns["ip"];
                this.columnport = base.Columns["port"];
                this.columndeviec_id = base.Columns["deviec_id"];
                this.columndisplay_part = base.Columns["display_part"];
                this.columnfreewayId = base.Columns["freewayId"];
                this.columnlocation = base.Columns["location"];
                this.columndirection = base.Columns["direction"];
                this.columnfrom_milepost = base.Columns["from_milepost"];
                this.columnend_milepost = base.Columns["end_milepost"];
                this.columniconid = base.Columns["iconid"];
                this.columnmsg_temp1 = base.Columns["msg_temp1"];
                this.columnmsg_temp2 = base.Columns["msg_temp2"];
                this.columnmessage1 = base.Columns["message1"];
                this.columnmessage2 = base.Columns["message2"];
                this.columnmode = base.Columns["mode"];
                this.columnficon = base.Columns["ficon"];
                this.columnfinput1 = base.Columns["finput1"];
                this.columnfinput2 = base.Columns["finput2"];
                this.columntraveltime = base.Columns["traveltime"];
                this.columnlowerlimit = base.Columns["lowerlimit"];
                this.columnupperlimit = base.Columns["upperlimit"];
                this.columnmessageColor1 = base.Columns["messageColor1"];
                this.columnmessageColor2 = base.Columns["messageColor2"];
                this.columnfinputColor1 = base.Columns["finputColor1"];
                this.columnfinputColor2 = base.Columns["finputColor2"];
                this.columncurr_icon = base.Columns["curr_icon"];
                this.columncurr_msg1 = base.Columns["curr_msg1"];
                this.columncurr_msg2 = base.Columns["curr_msg2"];
                this.columnconnected = base.Columns["connected"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrgs_name = new global::System.Data.DataColumn("rgs_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrgs_name);
                this.columnip = new global::System.Data.DataColumn("ip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnip);
                this.columnport = new global::System.Data.DataColumn("port", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnport);
                this.columndeviec_id = new global::System.Data.DataColumn("deviec_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeviec_id);
                this.columndisplay_part = new global::System.Data.DataColumn("display_part", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplay_part);
                this.columnfreewayId = new global::System.Data.DataColumn("freewayId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfreewayId);
                this.columnlocation = new global::System.Data.DataColumn("location", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation);
                this.columndirection = new global::System.Data.DataColumn("direction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndirection);
                this.columnfrom_milepost = new global::System.Data.DataColumn("from_milepost", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrom_milepost);
                this.columnend_milepost = new global::System.Data.DataColumn("end_milepost", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_milepost);
                this.columniconid = new global::System.Data.DataColumn("iconid", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniconid);
                this.columnmsg_temp1 = new global::System.Data.DataColumn("msg_temp1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmsg_temp1);
                this.columnmsg_temp2 = new global::System.Data.DataColumn("msg_temp2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmsg_temp2);
                this.columnmessage1 = new global::System.Data.DataColumn("message1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage1);
                this.columnmessage2 = new global::System.Data.DataColumn("message2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage2);
                this.columnmode = new global::System.Data.DataColumn("mode", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmode);
                this.columnficon = new global::System.Data.DataColumn("ficon", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnficon);
                this.columnfinput1 = new global::System.Data.DataColumn("finput1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinput1);
                this.columnfinput2 = new global::System.Data.DataColumn("finput2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinput2);
                this.columntraveltime = new global::System.Data.DataColumn("traveltime", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntraveltime);
                this.columnlowerlimit = new global::System.Data.DataColumn("lowerlimit", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlowerlimit);
                this.columnupperlimit = new global::System.Data.DataColumn("upperlimit", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupperlimit);
                this.columnmessageColor1 = new global::System.Data.DataColumn("messageColor1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessageColor1);
                this.columnmessageColor2 = new global::System.Data.DataColumn("messageColor2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessageColor2);
                this.columnfinputColor1 = new global::System.Data.DataColumn("finputColor1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinputColor1);
                this.columnfinputColor2 = new global::System.Data.DataColumn("finputColor2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinputColor2);
                this.columncurr_icon = new global::System.Data.DataColumn("curr_icon", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurr_icon);
                this.columncurr_msg1 = new global::System.Data.DataColumn("curr_msg1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurr_msg1);
                this.columncurr_msg2 = new global::System.Data.DataColumn("curr_msg2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurr_msg2);
                this.columnconnected = new global::System.Data.DataColumn("connected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnected);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("RGS_ConfigKey1", new global::System.Data.DataColumn[] {
                                this.columnip,
                                this.columndisplay_part}, true));
                this.columnip.AllowDBNull = false;
                this.columndisplay_part.AllowDBNull = false;
                this.columnmessageColor1.Caption = "message_color1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGS_ConfigRow NewtblRGS_ConfigRow() {
                return ((tblRGS_ConfigRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRGS_ConfigRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblRGS_ConfigRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRGS_ConfigRowChanged != null)) {
                    this.tblRGS_ConfigRowChanged(this, new tblRGS_ConfigRowChangeEvent(((tblRGS_ConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRGS_ConfigRowChanging != null)) {
                    this.tblRGS_ConfigRowChanging(this, new tblRGS_ConfigRowChangeEvent(((tblRGS_ConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRGS_ConfigRowDeleted != null)) {
                    this.tblRGS_ConfigRowDeleted(this, new tblRGS_ConfigRowChangeEvent(((tblRGS_ConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRGS_ConfigRowDeleting != null)) {
                    this.tblRGS_ConfigRowDeleting(this, new tblRGS_ConfigRowChangeEvent(((tblRGS_ConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblRGS_ConfigRow(tblRGS_ConfigRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Ds ds = new Ds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRGS_ConfigDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblIconsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columniconId;
            
            private global::System.Data.DataColumn columndescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIconsDataTable() {
                this.TableName = "tblIcons";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblIconsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblIconsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iconIdColumn {
                get {
                    return this.columniconId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIconsRow this[int index] {
                get {
                    return ((tblIconsRow)(this.Rows[index]));
                }
            }
            
            public event tblIconsRowChangeEventHandler tblIconsRowChanging;
            
            public event tblIconsRowChangeEventHandler tblIconsRowChanged;
            
            public event tblIconsRowChangeEventHandler tblIconsRowDeleting;
            
            public event tblIconsRowChangeEventHandler tblIconsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblIconsRow(tblIconsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIconsRow AddtblIconsRow(byte iconId, string description) {
                tblIconsRow rowtblIconsRow = ((tblIconsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        iconId,
                        description};
                rowtblIconsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblIconsRow);
                return rowtblIconsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblIconsDataTable cln = ((tblIconsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblIconsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columniconId = base.Columns["iconId"];
                this.columndescription = base.Columns["description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columniconId = new global::System.Data.DataColumn("iconId", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniconId);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIconsRow NewtblIconsRow() {
                return ((tblIconsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblIconsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblIconsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblIconsRowChanged != null)) {
                    this.tblIconsRowChanged(this, new tblIconsRowChangeEvent(((tblIconsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblIconsRowChanging != null)) {
                    this.tblIconsRowChanging(this, new tblIconsRowChangeEvent(((tblIconsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblIconsRowDeleted != null)) {
                    this.tblIconsRowDeleted(this, new tblIconsRowChangeEvent(((tblIconsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblIconsRowDeleting != null)) {
                    this.tblIconsRowDeleting(this, new tblIconsRowChangeEvent(((tblIconsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblIconsRow(tblIconsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Ds ds = new Ds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblIconsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRGSMainDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrgs_name;
            
            private global::System.Data.DataColumn columnip;
            
            private global::System.Data.DataColumn columnlocation;
            
            private global::System.Data.DataColumn columnfreewayId;
            
            private global::System.Data.DataColumn columndirection;
            
            private global::System.Data.DataColumn columnport;
            
            private global::System.Data.DataColumn columndeviec_id;
            
            private global::System.Data.DataColumn columnconnected;
            
            private global::System.Data.DataColumn columnhwstatus1;
            
            private global::System.Data.DataColumn columnhwstatus2;
            
            private global::System.Data.DataColumn columnhwstatus3;
            
            private global::System.Data.DataColumn columnhwstatus4;
            
            private global::System.Data.DataColumn columnDeviceErr;
            
            private global::System.Data.DataColumn columnCabineteOpen;
            
            private global::System.Data.DataColumn columnLED_ModuleErr;
            
            private global::System.Data.DataColumn columnDownLinkErr;
            
            private global::System.Data.DataColumn columnDisplayErr;
            
            private global::System.Data.DataColumn columnUplinkErr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSMainDataTable() {
                this.TableName = "tblRGSMain";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRGSMainDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblRGSMainDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rgs_nameColumn {
                get {
                    return this.columnrgs_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ipColumn {
                get {
                    return this.columnip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn locationColumn {
                get {
                    return this.columnlocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn freewayIdColumn {
                get {
                    return this.columnfreewayId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn directionColumn {
                get {
                    return this.columndirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn portColumn {
                get {
                    return this.columnport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deviec_idColumn {
                get {
                    return this.columndeviec_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn connectedColumn {
                get {
                    return this.columnconnected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwstatus1Column {
                get {
                    return this.columnhwstatus1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwstatus2Column {
                get {
                    return this.columnhwstatus2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwstatus3Column {
                get {
                    return this.columnhwstatus3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwstatus4Column {
                get {
                    return this.columnhwstatus4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeviceErrColumn {
                get {
                    return this.columnDeviceErr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabineteOpenColumn {
                get {
                    return this.columnCabineteOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LED_ModuleErrColumn {
                get {
                    return this.columnLED_ModuleErr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownLinkErrColumn {
                get {
                    return this.columnDownLinkErr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayErrColumn {
                get {
                    return this.columnDisplayErr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UplinkErrColumn {
                get {
                    return this.columnUplinkErr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSMainRow this[int index] {
                get {
                    return ((tblRGSMainRow)(this.Rows[index]));
                }
            }
            
            public event tblRGSMainRowChangeEventHandler tblRGSMainRowChanging;
            
            public event tblRGSMainRowChangeEventHandler tblRGSMainRowChanged;
            
            public event tblRGSMainRowChangeEventHandler tblRGSMainRowDeleting;
            
            public event tblRGSMainRowChangeEventHandler tblRGSMainRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblRGSMainRow(tblRGSMainRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSMainRow AddtblRGSMainRow(
                        string rgs_name, 
                        string ip, 
                        uint location, 
                        string freewayId, 
                        string direction, 
                        uint port, 
                        int deviec_id, 
                        bool connected, 
                        byte hwstatus1, 
                        byte hwstatus2, 
                        byte hwstatus3, 
                        byte hwstatus4, 
                        bool DeviceErr, 
                        bool CabineteOpen, 
                        bool LED_ModuleErr, 
                        bool DownLinkErr, 
                        bool DisplayErr, 
                        bool UplinkErr) {
                tblRGSMainRow rowtblRGSMainRow = ((tblRGSMainRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        rgs_name,
                        ip,
                        location,
                        freewayId,
                        direction,
                        port,
                        deviec_id,
                        connected,
                        hwstatus1,
                        hwstatus2,
                        hwstatus3,
                        hwstatus4,
                        DeviceErr,
                        CabineteOpen,
                        LED_ModuleErr,
                        DownLinkErr,
                        DisplayErr,
                        UplinkErr};
                rowtblRGSMainRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRGSMainRow);
                return rowtblRGSMainRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSMainRow FindByip(string ip) {
                return ((tblRGSMainRow)(this.Rows.Find(new object[] {
                            ip})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblRGSMainDataTable cln = ((tblRGSMainDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRGSMainDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrgs_name = base.Columns["rgs_name"];
                this.columnip = base.Columns["ip"];
                this.columnlocation = base.Columns["location"];
                this.columnfreewayId = base.Columns["freewayId"];
                this.columndirection = base.Columns["direction"];
                this.columnport = base.Columns["port"];
                this.columndeviec_id = base.Columns["deviec_id"];
                this.columnconnected = base.Columns["connected"];
                this.columnhwstatus1 = base.Columns["hwstatus1"];
                this.columnhwstatus2 = base.Columns["hwstatus2"];
                this.columnhwstatus3 = base.Columns["hwstatus3"];
                this.columnhwstatus4 = base.Columns["hwstatus4"];
                this.columnDeviceErr = base.Columns["DeviceErr"];
                this.columnCabineteOpen = base.Columns["CabineteOpen"];
                this.columnLED_ModuleErr = base.Columns["LED_ModuleErr"];
                this.columnDownLinkErr = base.Columns["DownLinkErr"];
                this.columnDisplayErr = base.Columns["DisplayErr"];
                this.columnUplinkErr = base.Columns["UplinkErr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrgs_name = new global::System.Data.DataColumn("rgs_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrgs_name);
                this.columnip = new global::System.Data.DataColumn("ip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnip);
                this.columnlocation = new global::System.Data.DataColumn("location", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation);
                this.columnfreewayId = new global::System.Data.DataColumn("freewayId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfreewayId);
                this.columndirection = new global::System.Data.DataColumn("direction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndirection);
                this.columnport = new global::System.Data.DataColumn("port", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnport);
                this.columndeviec_id = new global::System.Data.DataColumn("deviec_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeviec_id);
                this.columnconnected = new global::System.Data.DataColumn("connected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnected);
                this.columnhwstatus1 = new global::System.Data.DataColumn("hwstatus1", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwstatus1);
                this.columnhwstatus2 = new global::System.Data.DataColumn("hwstatus2", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwstatus2);
                this.columnhwstatus3 = new global::System.Data.DataColumn("hwstatus3", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwstatus3);
                this.columnhwstatus4 = new global::System.Data.DataColumn("hwstatus4", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwstatus4);
                this.columnDeviceErr = new global::System.Data.DataColumn("DeviceErr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceErr);
                this.columnCabineteOpen = new global::System.Data.DataColumn("CabineteOpen", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabineteOpen);
                this.columnLED_ModuleErr = new global::System.Data.DataColumn("LED_ModuleErr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLED_ModuleErr);
                this.columnDownLinkErr = new global::System.Data.DataColumn("DownLinkErr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownLinkErr);
                this.columnDisplayErr = new global::System.Data.DataColumn("DisplayErr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayErr);
                this.columnUplinkErr = new global::System.Data.DataColumn("UplinkErr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUplinkErr);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnip}, true));
                this.columnip.AllowDBNull = false;
                this.columnip.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSMainRow NewtblRGSMainRow() {
                return ((tblRGSMainRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRGSMainRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblRGSMainRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRGSMainRowChanged != null)) {
                    this.tblRGSMainRowChanged(this, new tblRGSMainRowChangeEvent(((tblRGSMainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRGSMainRowChanging != null)) {
                    this.tblRGSMainRowChanging(this, new tblRGSMainRowChangeEvent(((tblRGSMainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRGSMainRowDeleted != null)) {
                    this.tblRGSMainRowDeleted(this, new tblRGSMainRowChangeEvent(((tblRGSMainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRGSMainRowDeleting != null)) {
                    this.tblRGSMainRowDeleting(this, new tblRGSMainRowChangeEvent(((tblRGSMainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblRGSMainRow(tblRGSMainRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Ds ds = new Ds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRGSMainDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRGSModeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnvalue;
            
            private global::System.Data.DataColumn columndisplay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSModeDataTable() {
                this.TableName = "tblRGSMode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRGSModeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblRGSModeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valueColumn {
                get {
                    return this.columnvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn displayColumn {
                get {
                    return this.columndisplay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSModeRow this[int index] {
                get {
                    return ((tblRGSModeRow)(this.Rows[index]));
                }
            }
            
            public event tblRGSModeRowChangeEventHandler tblRGSModeRowChanging;
            
            public event tblRGSModeRowChangeEventHandler tblRGSModeRowChanged;
            
            public event tblRGSModeRowChangeEventHandler tblRGSModeRowDeleting;
            
            public event tblRGSModeRowChangeEventHandler tblRGSModeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblRGSModeRow(tblRGSModeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSModeRow AddtblRGSModeRow(byte value, string display) {
                tblRGSModeRow rowtblRGSModeRow = ((tblRGSModeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        value,
                        display};
                rowtblRGSModeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRGSModeRow);
                return rowtblRGSModeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblRGSModeDataTable cln = ((tblRGSModeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRGSModeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnvalue = base.Columns["value"];
                this.columndisplay = base.Columns["display"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnvalue = new global::System.Data.DataColumn("value", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue);
                this.columndisplay = new global::System.Data.DataColumn("display", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplay);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSModeRow NewtblRGSModeRow() {
                return ((tblRGSModeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRGSModeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblRGSModeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRGSModeRowChanged != null)) {
                    this.tblRGSModeRowChanged(this, new tblRGSModeRowChangeEvent(((tblRGSModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRGSModeRowChanging != null)) {
                    this.tblRGSModeRowChanging(this, new tblRGSModeRowChangeEvent(((tblRGSModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRGSModeRowDeleted != null)) {
                    this.tblRGSModeRowDeleted(this, new tblRGSModeRowChangeEvent(((tblRGSModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRGSModeRowDeleting != null)) {
                    this.tblRGSModeRowDeleting(this, new tblRGSModeRowChangeEvent(((tblRGSModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblRGSModeRow(tblRGSModeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Ds ds = new Ds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRGSModeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRmsConfigDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrms_name;
            
            private global::System.Data.DataColumn columnintersection;
            
            private global::System.Data.DataColumn columnip;
            
            private global::System.Data.DataColumn columnport;
            
            private global::System.Data.DataColumn columndevice_id;
            
            private global::System.Data.DataColumn columnctl_mode;
            
            private global::System.Data.DataColumn columnplanno;
            
            private global::System.Data.DataColumn columnrmsrate;
            
            private global::System.Data.DataColumn columnvehno;
            
            private global::System.Data.DataColumn columnctl_mode_setting;
            
            private global::System.Data.DataColumn columnrmsrate_setting;
            
            private global::System.Data.DataColumn columnvehno_setting;
            
            private global::System.Data.DataColumn columnplanno_setting;
            
            private global::System.Data.DataColumn columnconnected;
            
            private global::System.Data.DataColumn columnhwstatus1;
            
            private global::System.Data.DataColumn columnhwstatus2;
            
            private global::System.Data.DataColumn columnhwstatus3;
            
            private global::System.Data.DataColumn columnhwstatus4;
            
            private global::System.Data.DataColumn columnDeviceErr;
            
            private global::System.Data.DataColumn columnCabineteOpen;
            
            private global::System.Data.DataColumn columnLED_ModuleErr;
            
            private global::System.Data.DataColumn columnDownLinkErr;
            
            private global::System.Data.DataColumn columnUplinkErr;
            
            private global::System.Data.DataColumn columnDisplayErr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRmsConfigDataTable() {
                this.TableName = "tblRmsConfig";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRmsConfigDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblRmsConfigDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rms_nameColumn {
                get {
                    return this.columnrms_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn intersectionColumn {
                get {
                    return this.columnintersection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ipColumn {
                get {
                    return this.columnip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn portColumn {
                get {
                    return this.columnport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn device_idColumn {
                get {
                    return this.columndevice_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ctl_modeColumn {
                get {
                    return this.columnctl_mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plannoColumn {
                get {
                    return this.columnplanno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rmsrateColumn {
                get {
                    return this.columnrmsrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehnoColumn {
                get {
                    return this.columnvehno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ctl_mode_settingColumn {
                get {
                    return this.columnctl_mode_setting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rmsrate_settingColumn {
                get {
                    return this.columnrmsrate_setting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehno_settingColumn {
                get {
                    return this.columnvehno_setting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn planno_settingColumn {
                get {
                    return this.columnplanno_setting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn connectedColumn {
                get {
                    return this.columnconnected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwstatus1Column {
                get {
                    return this.columnhwstatus1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwstatus2Column {
                get {
                    return this.columnhwstatus2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwstatus3Column {
                get {
                    return this.columnhwstatus3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwstatus4Column {
                get {
                    return this.columnhwstatus4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeviceErrColumn {
                get {
                    return this.columnDeviceErr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabineteOpenColumn {
                get {
                    return this.columnCabineteOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LED_ModuleErrColumn {
                get {
                    return this.columnLED_ModuleErr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownLinkErrColumn {
                get {
                    return this.columnDownLinkErr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UplinkErrColumn {
                get {
                    return this.columnUplinkErr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayErrColumn {
                get {
                    return this.columnDisplayErr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRmsConfigRow this[int index] {
                get {
                    return ((tblRmsConfigRow)(this.Rows[index]));
                }
            }
            
            public event tblRmsConfigRowChangeEventHandler tblRmsConfigRowChanging;
            
            public event tblRmsConfigRowChangeEventHandler tblRmsConfigRowChanged;
            
            public event tblRmsConfigRowChangeEventHandler tblRmsConfigRowDeleting;
            
            public event tblRmsConfigRowChangeEventHandler tblRmsConfigRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblRmsConfigRow(tblRmsConfigRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRmsConfigRow AddtblRmsConfigRow(
                        string rms_name, 
                        string intersection, 
                        string ip, 
                        uint port, 
                        string device_id, 
                        uint ctl_mode, 
                        uint planno, 
                        uint rmsrate, 
                        uint vehno, 
                        uint ctl_mode_setting, 
                        uint rmsrate_setting, 
                        uint vehno_setting, 
                        uint planno_setting, 
                        bool connected, 
                        byte hwstatus1, 
                        byte hwstatus2, 
                        byte hwstatus3, 
                        byte hwstatus4, 
                        bool DeviceErr, 
                        bool CabineteOpen, 
                        bool LED_ModuleErr, 
                        bool DownLinkErr, 
                        bool UplinkErr, 
                        bool DisplayErr) {
                tblRmsConfigRow rowtblRmsConfigRow = ((tblRmsConfigRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        rms_name,
                        intersection,
                        ip,
                        port,
                        device_id,
                        ctl_mode,
                        planno,
                        rmsrate,
                        vehno,
                        ctl_mode_setting,
                        rmsrate_setting,
                        vehno_setting,
                        planno_setting,
                        connected,
                        hwstatus1,
                        hwstatus2,
                        hwstatus3,
                        hwstatus4,
                        DeviceErr,
                        CabineteOpen,
                        LED_ModuleErr,
                        DownLinkErr,
                        UplinkErr,
                        DisplayErr};
                rowtblRmsConfigRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRmsConfigRow);
                return rowtblRmsConfigRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRmsConfigRow FindByip(string ip) {
                return ((tblRmsConfigRow)(this.Rows.Find(new object[] {
                            ip})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblRmsConfigDataTable cln = ((tblRmsConfigDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRmsConfigDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrms_name = base.Columns["rms_name"];
                this.columnintersection = base.Columns["intersection"];
                this.columnip = base.Columns["ip"];
                this.columnport = base.Columns["port"];
                this.columndevice_id = base.Columns["device_id"];
                this.columnctl_mode = base.Columns["ctl_mode"];
                this.columnplanno = base.Columns["planno"];
                this.columnrmsrate = base.Columns["rmsrate"];
                this.columnvehno = base.Columns["vehno"];
                this.columnctl_mode_setting = base.Columns["ctl_mode_setting"];
                this.columnrmsrate_setting = base.Columns["rmsrate_setting"];
                this.columnvehno_setting = base.Columns["vehno_setting"];
                this.columnplanno_setting = base.Columns["planno_setting"];
                this.columnconnected = base.Columns["connected"];
                this.columnhwstatus1 = base.Columns["hwstatus1"];
                this.columnhwstatus2 = base.Columns["hwstatus2"];
                this.columnhwstatus3 = base.Columns["hwstatus3"];
                this.columnhwstatus4 = base.Columns["hwstatus4"];
                this.columnDeviceErr = base.Columns["DeviceErr"];
                this.columnCabineteOpen = base.Columns["CabineteOpen"];
                this.columnLED_ModuleErr = base.Columns["LED_ModuleErr"];
                this.columnDownLinkErr = base.Columns["DownLinkErr"];
                this.columnUplinkErr = base.Columns["UplinkErr"];
                this.columnDisplayErr = base.Columns["DisplayErr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrms_name = new global::System.Data.DataColumn("rms_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrms_name);
                this.columnintersection = new global::System.Data.DataColumn("intersection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintersection);
                this.columnip = new global::System.Data.DataColumn("ip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnip);
                this.columnport = new global::System.Data.DataColumn("port", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnport);
                this.columndevice_id = new global::System.Data.DataColumn("device_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndevice_id);
                this.columnctl_mode = new global::System.Data.DataColumn("ctl_mode", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnctl_mode);
                this.columnplanno = new global::System.Data.DataColumn("planno", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplanno);
                this.columnrmsrate = new global::System.Data.DataColumn("rmsrate", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrmsrate);
                this.columnvehno = new global::System.Data.DataColumn("vehno", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehno);
                this.columnctl_mode_setting = new global::System.Data.DataColumn("ctl_mode_setting", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnctl_mode_setting);
                this.columnrmsrate_setting = new global::System.Data.DataColumn("rmsrate_setting", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrmsrate_setting);
                this.columnvehno_setting = new global::System.Data.DataColumn("vehno_setting", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehno_setting);
                this.columnplanno_setting = new global::System.Data.DataColumn("planno_setting", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplanno_setting);
                this.columnconnected = new global::System.Data.DataColumn("connected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnected);
                this.columnhwstatus1 = new global::System.Data.DataColumn("hwstatus1", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwstatus1);
                this.columnhwstatus2 = new global::System.Data.DataColumn("hwstatus2", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwstatus2);
                this.columnhwstatus3 = new global::System.Data.DataColumn("hwstatus3", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwstatus3);
                this.columnhwstatus4 = new global::System.Data.DataColumn("hwstatus4", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwstatus4);
                this.columnDeviceErr = new global::System.Data.DataColumn("DeviceErr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceErr);
                this.columnCabineteOpen = new global::System.Data.DataColumn("CabineteOpen", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabineteOpen);
                this.columnLED_ModuleErr = new global::System.Data.DataColumn("LED_ModuleErr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLED_ModuleErr);
                this.columnDownLinkErr = new global::System.Data.DataColumn("DownLinkErr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownLinkErr);
                this.columnUplinkErr = new global::System.Data.DataColumn("UplinkErr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUplinkErr);
                this.columnDisplayErr = new global::System.Data.DataColumn("DisplayErr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayErr);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnip}, true));
                this.columnip.AllowDBNull = false;
                this.columnip.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRmsConfigRow NewtblRmsConfigRow() {
                return ((tblRmsConfigRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRmsConfigRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblRmsConfigRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRmsConfigRowChanged != null)) {
                    this.tblRmsConfigRowChanged(this, new tblRmsConfigRowChangeEvent(((tblRmsConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRmsConfigRowChanging != null)) {
                    this.tblRmsConfigRowChanging(this, new tblRmsConfigRowChangeEvent(((tblRmsConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRmsConfigRowDeleted != null)) {
                    this.tblRmsConfigRowDeleted(this, new tblRmsConfigRowChangeEvent(((tblRmsConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRmsConfigRowDeleting != null)) {
                    this.tblRmsConfigRowDeleting(this, new tblRmsConfigRowChangeEvent(((tblRmsConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblRmsConfigRow(tblRmsConfigRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Ds ds = new Ds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRmsConfigDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRMSModeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnvalue;
            
            private global::System.Data.DataColumn columndisplay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRMSModeDataTable() {
                this.TableName = "tblRMSMode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRMSModeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblRMSModeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valueColumn {
                get {
                    return this.columnvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn displayColumn {
                get {
                    return this.columndisplay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRMSModeRow this[int index] {
                get {
                    return ((tblRMSModeRow)(this.Rows[index]));
                }
            }
            
            public event tblRMSModeRowChangeEventHandler tblRMSModeRowChanging;
            
            public event tblRMSModeRowChangeEventHandler tblRMSModeRowChanged;
            
            public event tblRMSModeRowChangeEventHandler tblRMSModeRowDeleting;
            
            public event tblRMSModeRowChangeEventHandler tblRMSModeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblRMSModeRow(tblRMSModeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRMSModeRow AddtblRMSModeRow(uint value, string display) {
                tblRMSModeRow rowtblRMSModeRow = ((tblRMSModeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        value,
                        display};
                rowtblRMSModeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRMSModeRow);
                return rowtblRMSModeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblRMSModeDataTable cln = ((tblRMSModeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRMSModeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnvalue = base.Columns["value"];
                this.columndisplay = base.Columns["display"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnvalue = new global::System.Data.DataColumn("value", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue);
                this.columndisplay = new global::System.Data.DataColumn("display", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplay);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRMSModeRow NewtblRMSModeRow() {
                return ((tblRMSModeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRMSModeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblRMSModeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRMSModeRowChanged != null)) {
                    this.tblRMSModeRowChanged(this, new tblRMSModeRowChangeEvent(((tblRMSModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRMSModeRowChanging != null)) {
                    this.tblRMSModeRowChanging(this, new tblRMSModeRowChangeEvent(((tblRMSModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRMSModeRowDeleted != null)) {
                    this.tblRMSModeRowDeleted(this, new tblRMSModeRowChangeEvent(((tblRMSModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRMSModeRowDeleting != null)) {
                    this.tblRMSModeRowDeleting(this, new tblRMSModeRowChangeEvent(((tblRMSModeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblRMSModeRow(tblRMSModeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Ds ds = new Ds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRMSModeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblFileAttrRow : global::System.Data.DataRow {
            
            private tblFileAttrDataTable tabletblFileAttr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblFileAttrRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblFileAttr = ((tblFileAttrDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblFileAttr.timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblFileAttr\' 中資料行 \'time\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblFileAttr.timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstimeNull() {
                return this.IsNull(this.tabletblFileAttr.timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettimeNull() {
                this[this.tabletblFileAttr.timeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblSecTrafficDataRow : global::System.Data.DataRow {
            
            private tblSecTrafficDataDataTable tabletblSecTrafficData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSecTrafficDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblSecTrafficData = ((tblSecTrafficDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string freewayId {
                get {
                    try {
                        return ((string)(this[this.tabletblSecTrafficData.freewayIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblSecTrafficData\' 中資料行 \'freewayId\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblSecTrafficData.freewayIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string expresswayId {
                get {
                    try {
                        return ((string)(this[this.tabletblSecTrafficData.expresswayIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblSecTrafficData\' 中資料行 \'expresswayId\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblSecTrafficData.expresswayIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string directionId {
                get {
                    try {
                        return ((string)(this[this.tabletblSecTrafficData.directionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblSecTrafficData\' 中資料行 \'directionId\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblSecTrafficData.directionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string from_location {
                get {
                    try {
                        return ((string)(this[this.tabletblSecTrafficData.from_locationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblSecTrafficData\' 中資料行 \'from_location\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblSecTrafficData.from_locationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint from_milepost {
                get {
                    try {
                        return ((uint)(this[this.tabletblSecTrafficData.from_milepostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblSecTrafficData\' 中資料行 \'from_milepost\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblSecTrafficData.from_milepostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string end_location {
                get {
                    try {
                        return ((string)(this[this.tabletblSecTrafficData.end_locationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblSecTrafficData\' 中資料行 \'end_location\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblSecTrafficData.end_locationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint end_milepost {
                get {
                    try {
                        return ((uint)(this[this.tabletblSecTrafficData.end_milepostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblSecTrafficData\' 中資料行 \'end_milepost\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblSecTrafficData.end_milepostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint section_upper_limit {
                get {
                    try {
                        return ((uint)(this[this.tabletblSecTrafficData.section_upper_limitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblSecTrafficData\' 中資料行 \'section_upper_limit\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblSecTrafficData.section_upper_limitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint section_lower_limit {
                get {
                    try {
                        return ((uint)(this[this.tabletblSecTrafficData.section_lower_limitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblSecTrafficData\' 中資料行 \'section_lower_limit\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblSecTrafficData.section_lower_limitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float travel_time {
                get {
                    try {
                        return ((float)(this[this.tabletblSecTrafficData.travel_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblSecTrafficData\' 中資料行 \'travel_time\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblSecTrafficData.travel_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfreewayIdNull() {
                return this.IsNull(this.tabletblSecTrafficData.freewayIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfreewayIdNull() {
                this[this.tabletblSecTrafficData.freewayIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexpresswayIdNull() {
                return this.IsNull(this.tabletblSecTrafficData.expresswayIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexpresswayIdNull() {
                this[this.tabletblSecTrafficData.expresswayIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdirectionIdNull() {
                return this.IsNull(this.tabletblSecTrafficData.directionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdirectionIdNull() {
                this[this.tabletblSecTrafficData.directionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfrom_locationNull() {
                return this.IsNull(this.tabletblSecTrafficData.from_locationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfrom_locationNull() {
                this[this.tabletblSecTrafficData.from_locationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfrom_milepostNull() {
                return this.IsNull(this.tabletblSecTrafficData.from_milepostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfrom_milepostNull() {
                this[this.tabletblSecTrafficData.from_milepostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_locationNull() {
                return this.IsNull(this.tabletblSecTrafficData.end_locationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_locationNull() {
                this[this.tabletblSecTrafficData.end_locationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_milepostNull() {
                return this.IsNull(this.tabletblSecTrafficData.end_milepostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_milepostNull() {
                this[this.tabletblSecTrafficData.end_milepostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issection_upper_limitNull() {
                return this.IsNull(this.tabletblSecTrafficData.section_upper_limitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsection_upper_limitNull() {
                this[this.tabletblSecTrafficData.section_upper_limitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issection_lower_limitNull() {
                return this.IsNull(this.tabletblSecTrafficData.section_lower_limitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsection_lower_limitNull() {
                this[this.tabletblSecTrafficData.section_lower_limitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istravel_timeNull() {
                return this.IsNull(this.tabletblSecTrafficData.travel_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settravel_timeNull() {
                this[this.tabletblSecTrafficData.travel_timeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblRGS_ConfigRow : global::System.Data.DataRow {
            
            private tblRGS_ConfigDataTable tabletblRGS_Config;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRGS_ConfigRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRGS_Config = ((tblRGS_ConfigDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rgs_name {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.rgs_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'rgs_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.rgs_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ip {
                get {
                    return ((string)(this[this.tabletblRGS_Config.ipColumn]));
                }
                set {
                    this[this.tabletblRGS_Config.ipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint port {
                get {
                    try {
                        return ((uint)(this[this.tabletblRGS_Config.portColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'port\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.portColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string deviec_id {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.deviec_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'deviec_id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.deviec_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte display_part {
                get {
                    return ((byte)(this[this.tabletblRGS_Config.display_partColumn]));
                }
                set {
                    this[this.tabletblRGS_Config.display_partColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string freewayId {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.freewayIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'freewayId\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.freewayIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint location {
                get {
                    try {
                        return ((uint)(this[this.tabletblRGS_Config.locationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'location\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.locationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direction {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.directionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'direction\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.directionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint from_milepost {
                get {
                    try {
                        return ((uint)(this[this.tabletblRGS_Config.from_milepostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'from_milepost\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.from_milepostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint end_milepost {
                get {
                    try {
                        return ((uint)(this[this.tabletblRGS_Config.end_milepostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'end_milepost\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.end_milepostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte iconid {
                get {
                    try {
                        return ((byte)(this[this.tabletblRGS_Config.iconidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'iconid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.iconidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string msg_temp1 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.msg_temp1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'msg_temp1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.msg_temp1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string msg_temp2 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.msg_temp2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'msg_temp2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.msg_temp2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string message1 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.message1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'message1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.message1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string message2 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.message2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'message2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.message2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte mode {
                get {
                    try {
                        return ((byte)(this[this.tabletblRGS_Config.modeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'mode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ficon {
                get {
                    try {
                        return ((byte)(this[this.tabletblRGS_Config.ficonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'ficon\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.ficonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string finput1 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.finput1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'finput1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.finput1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string finput2 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.finput2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'finput2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.finput2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float traveltime {
                get {
                    try {
                        return ((float)(this[this.tabletblRGS_Config.traveltimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'traveltime\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.traveltimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint lowerlimit {
                get {
                    try {
                        return ((uint)(this[this.tabletblRGS_Config.lowerlimitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'lowerlimit\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.lowerlimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint upperlimit {
                get {
                    try {
                        return ((uint)(this[this.tabletblRGS_Config.upperlimitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'upperlimit\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.upperlimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string messageColor1 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.messageColor1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'messageColor1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.messageColor1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string messageColor2 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.messageColor2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'messageColor2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.messageColor2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string finputColor1 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.finputColor1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'finputColor1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.finputColor1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string finputColor2 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.finputColor2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'finputColor2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.finputColor2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte curr_icon {
                get {
                    try {
                        return ((byte)(this[this.tabletblRGS_Config.curr_iconColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'curr_icon\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.curr_iconColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string curr_msg1 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.curr_msg1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'curr_msg1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.curr_msg1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string curr_msg2 {
                get {
                    try {
                        return ((string)(this[this.tabletblRGS_Config.curr_msg2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'curr_msg2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.curr_msg2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool connected {
                get {
                    try {
                        return ((bool)(this[this.tabletblRGS_Config.connectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGS_Config\' 中資料行 \'connected\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGS_Config.connectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSMainRow tblRGSMainRow {
                get {
                    return ((tblRGSMainRow)(this.GetParentRow(this.Table.ParentRelations["tblRGSMain_tblRGS_Config"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tblRGSMain_tblRGS_Config"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrgs_nameNull() {
                return this.IsNull(this.tabletblRGS_Config.rgs_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrgs_nameNull() {
                this[this.tabletblRGS_Config.rgs_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsportNull() {
                return this.IsNull(this.tabletblRGS_Config.portColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetportNull() {
                this[this.tabletblRGS_Config.portColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeviec_idNull() {
                return this.IsNull(this.tabletblRGS_Config.deviec_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeviec_idNull() {
                this[this.tabletblRGS_Config.deviec_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfreewayIdNull() {
                return this.IsNull(this.tabletblRGS_Config.freewayIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfreewayIdNull() {
                this[this.tabletblRGS_Config.freewayIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocationNull() {
                return this.IsNull(this.tabletblRGS_Config.locationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocationNull() {
                this[this.tabletblRGS_Config.locationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdirectionNull() {
                return this.IsNull(this.tabletblRGS_Config.directionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdirectionNull() {
                this[this.tabletblRGS_Config.directionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfrom_milepostNull() {
                return this.IsNull(this.tabletblRGS_Config.from_milepostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfrom_milepostNull() {
                this[this.tabletblRGS_Config.from_milepostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_milepostNull() {
                return this.IsNull(this.tabletblRGS_Config.end_milepostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_milepostNull() {
                this[this.tabletblRGS_Config.end_milepostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiconidNull() {
                return this.IsNull(this.tabletblRGS_Config.iconidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeticonidNull() {
                this[this.tabletblRGS_Config.iconidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismsg_temp1Null() {
                return this.IsNull(this.tabletblRGS_Config.msg_temp1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmsg_temp1Null() {
                this[this.tabletblRGS_Config.msg_temp1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismsg_temp2Null() {
                return this.IsNull(this.tabletblRGS_Config.msg_temp2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmsg_temp2Null() {
                this[this.tabletblRGS_Config.msg_temp2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismessage1Null() {
                return this.IsNull(this.tabletblRGS_Config.message1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmessage1Null() {
                this[this.tabletblRGS_Config.message1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismessage2Null() {
                return this.IsNull(this.tabletblRGS_Config.message2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmessage2Null() {
                this[this.tabletblRGS_Config.message2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodeNull() {
                return this.IsNull(this.tabletblRGS_Config.modeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodeNull() {
                this[this.tabletblRGS_Config.modeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsficonNull() {
                return this.IsNull(this.tabletblRGS_Config.ficonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetficonNull() {
                this[this.tabletblRGS_Config.ficonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfinput1Null() {
                return this.IsNull(this.tabletblRGS_Config.finput1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfinput1Null() {
                this[this.tabletblRGS_Config.finput1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfinput2Null() {
                return this.IsNull(this.tabletblRGS_Config.finput2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfinput2Null() {
                this[this.tabletblRGS_Config.finput2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstraveltimeNull() {
                return this.IsNull(this.tabletblRGS_Config.traveltimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettraveltimeNull() {
                this[this.tabletblRGS_Config.traveltimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslowerlimitNull() {
                return this.IsNull(this.tabletblRGS_Config.lowerlimitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlowerlimitNull() {
                this[this.tabletblRGS_Config.lowerlimitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupperlimitNull() {
                return this.IsNull(this.tabletblRGS_Config.upperlimitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupperlimitNull() {
                this[this.tabletblRGS_Config.upperlimitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmessageColor1Null() {
                return this.IsNull(this.tabletblRGS_Config.messageColor1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmessageColor1Null() {
                this[this.tabletblRGS_Config.messageColor1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmessageColor2Null() {
                return this.IsNull(this.tabletblRGS_Config.messageColor2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmessageColor2Null() {
                this[this.tabletblRGS_Config.messageColor2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfinputColor1Null() {
                return this.IsNull(this.tabletblRGS_Config.finputColor1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfinputColor1Null() {
                this[this.tabletblRGS_Config.finputColor1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfinputColor2Null() {
                return this.IsNull(this.tabletblRGS_Config.finputColor2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfinputColor2Null() {
                this[this.tabletblRGS_Config.finputColor2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscurr_iconNull() {
                return this.IsNull(this.tabletblRGS_Config.curr_iconColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcurr_iconNull() {
                this[this.tabletblRGS_Config.curr_iconColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscurr_msg1Null() {
                return this.IsNull(this.tabletblRGS_Config.curr_msg1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcurr_msg1Null() {
                this[this.tabletblRGS_Config.curr_msg1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscurr_msg2Null() {
                return this.IsNull(this.tabletblRGS_Config.curr_msg2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcurr_msg2Null() {
                this[this.tabletblRGS_Config.curr_msg2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectedNull() {
                return this.IsNull(this.tabletblRGS_Config.connectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectedNull() {
                this[this.tabletblRGS_Config.connectedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblIconsRow : global::System.Data.DataRow {
            
            private tblIconsDataTable tabletblIcons;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblIconsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblIcons = ((tblIconsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte iconId {
                get {
                    try {
                        return ((byte)(this[this.tabletblIcons.iconIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblIcons\' 中資料行 \'iconId\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblIcons.iconIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tabletblIcons.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblIcons\' 中資料行 \'description\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblIcons.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiconIdNull() {
                return this.IsNull(this.tabletblIcons.iconIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeticonIdNull() {
                this[this.tabletblIcons.iconIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tabletblIcons.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tabletblIcons.descriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblRGSMainRow : global::System.Data.DataRow {
            
            private tblRGSMainDataTable tabletblRGSMain;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRGSMainRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRGSMain = ((tblRGSMainDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rgs_name {
                get {
                    try {
                        return ((string)(this[this.tabletblRGSMain.rgs_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'rgs_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.rgs_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ip {
                get {
                    return ((string)(this[this.tabletblRGSMain.ipColumn]));
                }
                set {
                    this[this.tabletblRGSMain.ipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint location {
                get {
                    try {
                        return ((uint)(this[this.tabletblRGSMain.locationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'location\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.locationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string freewayId {
                get {
                    try {
                        return ((string)(this[this.tabletblRGSMain.freewayIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'freewayId\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.freewayIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direction {
                get {
                    try {
                        return ((string)(this[this.tabletblRGSMain.directionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'direction\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.directionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint port {
                get {
                    try {
                        return ((uint)(this[this.tabletblRGSMain.portColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'port\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.portColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int deviec_id {
                get {
                    try {
                        return ((int)(this[this.tabletblRGSMain.deviec_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'deviec_id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.deviec_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool connected {
                get {
                    try {
                        return ((bool)(this[this.tabletblRGSMain.connectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'connected\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.connectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte hwstatus1 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRGSMain.hwstatus1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'hwstatus1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.hwstatus1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte hwstatus2 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRGSMain.hwstatus2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'hwstatus2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.hwstatus2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte hwstatus3 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRGSMain.hwstatus3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'hwstatus3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.hwstatus3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte hwstatus4 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRGSMain.hwstatus4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'hwstatus4\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.hwstatus4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DeviceErr {
                get {
                    try {
                        return ((bool)(this[this.tabletblRGSMain.DeviceErrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'DeviceErr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.DeviceErrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CabineteOpen {
                get {
                    try {
                        return ((bool)(this[this.tabletblRGSMain.CabineteOpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'CabineteOpen\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.CabineteOpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LED_ModuleErr {
                get {
                    try {
                        return ((bool)(this[this.tabletblRGSMain.LED_ModuleErrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'LED_ModuleErr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.LED_ModuleErrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DownLinkErr {
                get {
                    try {
                        return ((bool)(this[this.tabletblRGSMain.DownLinkErrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'DownLinkErr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.DownLinkErrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DisplayErr {
                get {
                    try {
                        return ((bool)(this[this.tabletblRGSMain.DisplayErrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'DisplayErr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.DisplayErrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool UplinkErr {
                get {
                    try {
                        return ((bool)(this[this.tabletblRGSMain.UplinkErrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMain\' 中資料行 \'UplinkErr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMain.UplinkErrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrgs_nameNull() {
                return this.IsNull(this.tabletblRGSMain.rgs_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrgs_nameNull() {
                this[this.tabletblRGSMain.rgs_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocationNull() {
                return this.IsNull(this.tabletblRGSMain.locationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocationNull() {
                this[this.tabletblRGSMain.locationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfreewayIdNull() {
                return this.IsNull(this.tabletblRGSMain.freewayIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfreewayIdNull() {
                this[this.tabletblRGSMain.freewayIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdirectionNull() {
                return this.IsNull(this.tabletblRGSMain.directionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdirectionNull() {
                this[this.tabletblRGSMain.directionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsportNull() {
                return this.IsNull(this.tabletblRGSMain.portColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetportNull() {
                this[this.tabletblRGSMain.portColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdeviec_idNull() {
                return this.IsNull(this.tabletblRGSMain.deviec_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdeviec_idNull() {
                this[this.tabletblRGSMain.deviec_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectedNull() {
                return this.IsNull(this.tabletblRGSMain.connectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectedNull() {
                this[this.tabletblRGSMain.connectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishwstatus1Null() {
                return this.IsNull(this.tabletblRGSMain.hwstatus1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethwstatus1Null() {
                this[this.tabletblRGSMain.hwstatus1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishwstatus2Null() {
                return this.IsNull(this.tabletblRGSMain.hwstatus2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethwstatus2Null() {
                this[this.tabletblRGSMain.hwstatus2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishwstatus3Null() {
                return this.IsNull(this.tabletblRGSMain.hwstatus3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethwstatus3Null() {
                this[this.tabletblRGSMain.hwstatus3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishwstatus4Null() {
                return this.IsNull(this.tabletblRGSMain.hwstatus4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethwstatus4Null() {
                this[this.tabletblRGSMain.hwstatus4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeviceErrNull() {
                return this.IsNull(this.tabletblRGSMain.DeviceErrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeviceErrNull() {
                this[this.tabletblRGSMain.DeviceErrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabineteOpenNull() {
                return this.IsNull(this.tabletblRGSMain.CabineteOpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabineteOpenNull() {
                this[this.tabletblRGSMain.CabineteOpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLED_ModuleErrNull() {
                return this.IsNull(this.tabletblRGSMain.LED_ModuleErrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLED_ModuleErrNull() {
                this[this.tabletblRGSMain.LED_ModuleErrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDownLinkErrNull() {
                return this.IsNull(this.tabletblRGSMain.DownLinkErrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDownLinkErrNull() {
                this[this.tabletblRGSMain.DownLinkErrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplayErrNull() {
                return this.IsNull(this.tabletblRGSMain.DisplayErrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplayErrNull() {
                this[this.tabletblRGSMain.DisplayErrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUplinkErrNull() {
                return this.IsNull(this.tabletblRGSMain.UplinkErrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUplinkErrNull() {
                this[this.tabletblRGSMain.UplinkErrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGS_ConfigRow[] GettblRGS_ConfigRows() {
                if ((this.Table.ChildRelations["tblRGSMain_tblRGS_Config"] == null)) {
                    return new tblRGS_ConfigRow[0];
                }
                else {
                    return ((tblRGS_ConfigRow[])(base.GetChildRows(this.Table.ChildRelations["tblRGSMain_tblRGS_Config"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblRGSModeRow : global::System.Data.DataRow {
            
            private tblRGSModeDataTable tabletblRGSMode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRGSModeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRGSMode = ((tblRGSModeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte value {
                get {
                    try {
                        return ((byte)(this[this.tabletblRGSMode.valueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMode\' 中資料行 \'value\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMode.valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string display {
                get {
                    try {
                        return ((string)(this[this.tabletblRGSMode.displayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRGSMode\' 中資料行 \'display\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRGSMode.displayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalueNull() {
                return this.IsNull(this.tabletblRGSMode.valueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalueNull() {
                this[this.tabletblRGSMode.valueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdisplayNull() {
                return this.IsNull(this.tabletblRGSMode.displayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdisplayNull() {
                this[this.tabletblRGSMode.displayColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblRmsConfigRow : global::System.Data.DataRow {
            
            private tblRmsConfigDataTable tabletblRmsConfig;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRmsConfigRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRmsConfig = ((tblRmsConfigDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rms_name {
                get {
                    try {
                        return ((string)(this[this.tabletblRmsConfig.rms_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'rms_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.rms_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string intersection {
                get {
                    try {
                        return ((string)(this[this.tabletblRmsConfig.intersectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'intersection\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.intersectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ip {
                get {
                    return ((string)(this[this.tabletblRmsConfig.ipColumn]));
                }
                set {
                    this[this.tabletblRmsConfig.ipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint port {
                get {
                    try {
                        return ((uint)(this[this.tabletblRmsConfig.portColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'port\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.portColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string device_id {
                get {
                    try {
                        return ((string)(this[this.tabletblRmsConfig.device_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'device_id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.device_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint ctl_mode {
                get {
                    try {
                        return ((uint)(this[this.tabletblRmsConfig.ctl_modeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'ctl_mode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.ctl_modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint planno {
                get {
                    try {
                        return ((uint)(this[this.tabletblRmsConfig.plannoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'planno\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.plannoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint rmsrate {
                get {
                    try {
                        return ((uint)(this[this.tabletblRmsConfig.rmsrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'rmsrate\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.rmsrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint vehno {
                get {
                    try {
                        return ((uint)(this[this.tabletblRmsConfig.vehnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'vehno\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.vehnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint ctl_mode_setting {
                get {
                    try {
                        return ((uint)(this[this.tabletblRmsConfig.ctl_mode_settingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'ctl_mode_setting\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.ctl_mode_settingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint rmsrate_setting {
                get {
                    try {
                        return ((uint)(this[this.tabletblRmsConfig.rmsrate_settingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'rmsrate_setting\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.rmsrate_settingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint vehno_setting {
                get {
                    try {
                        return ((uint)(this[this.tabletblRmsConfig.vehno_settingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'vehno_setting\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.vehno_settingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint planno_setting {
                get {
                    try {
                        return ((uint)(this[this.tabletblRmsConfig.planno_settingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'planno_setting\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.planno_settingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool connected {
                get {
                    try {
                        return ((bool)(this[this.tabletblRmsConfig.connectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'connected\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.connectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte hwstatus1 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRmsConfig.hwstatus1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'hwstatus1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.hwstatus1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte hwstatus2 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRmsConfig.hwstatus2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'hwstatus2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.hwstatus2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte hwstatus3 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRmsConfig.hwstatus3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'hwstatus3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.hwstatus3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte hwstatus4 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRmsConfig.hwstatus4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'hwstatus4\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.hwstatus4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DeviceErr {
                get {
                    try {
                        return ((bool)(this[this.tabletblRmsConfig.DeviceErrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'DeviceErr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.DeviceErrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CabineteOpen {
                get {
                    try {
                        return ((bool)(this[this.tabletblRmsConfig.CabineteOpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'CabineteOpen\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.CabineteOpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LED_ModuleErr {
                get {
                    try {
                        return ((bool)(this[this.tabletblRmsConfig.LED_ModuleErrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'LED_ModuleErr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.LED_ModuleErrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DownLinkErr {
                get {
                    try {
                        return ((bool)(this[this.tabletblRmsConfig.DownLinkErrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'DownLinkErr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.DownLinkErrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool UplinkErr {
                get {
                    try {
                        return ((bool)(this[this.tabletblRmsConfig.UplinkErrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'UplinkErr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.UplinkErrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DisplayErr {
                get {
                    try {
                        return ((bool)(this[this.tabletblRmsConfig.DisplayErrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRmsConfig\' 中資料行 \'DisplayErr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRmsConfig.DisplayErrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrms_nameNull() {
                return this.IsNull(this.tabletblRmsConfig.rms_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrms_nameNull() {
                this[this.tabletblRmsConfig.rms_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsintersectionNull() {
                return this.IsNull(this.tabletblRmsConfig.intersectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetintersectionNull() {
                this[this.tabletblRmsConfig.intersectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsportNull() {
                return this.IsNull(this.tabletblRmsConfig.portColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetportNull() {
                this[this.tabletblRmsConfig.portColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdevice_idNull() {
                return this.IsNull(this.tabletblRmsConfig.device_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdevice_idNull() {
                this[this.tabletblRmsConfig.device_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isctl_modeNull() {
                return this.IsNull(this.tabletblRmsConfig.ctl_modeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setctl_modeNull() {
                this[this.tabletblRmsConfig.ctl_modeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplannoNull() {
                return this.IsNull(this.tabletblRmsConfig.plannoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplannoNull() {
                this[this.tabletblRmsConfig.plannoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrmsrateNull() {
                return this.IsNull(this.tabletblRmsConfig.rmsrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrmsrateNull() {
                this[this.tabletblRmsConfig.rmsrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvehnoNull() {
                return this.IsNull(this.tabletblRmsConfig.vehnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvehnoNull() {
                this[this.tabletblRmsConfig.vehnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isctl_mode_settingNull() {
                return this.IsNull(this.tabletblRmsConfig.ctl_mode_settingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setctl_mode_settingNull() {
                this[this.tabletblRmsConfig.ctl_mode_settingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrmsrate_settingNull() {
                return this.IsNull(this.tabletblRmsConfig.rmsrate_settingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrmsrate_settingNull() {
                this[this.tabletblRmsConfig.rmsrate_settingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvehno_settingNull() {
                return this.IsNull(this.tabletblRmsConfig.vehno_settingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvehno_settingNull() {
                this[this.tabletblRmsConfig.vehno_settingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isplanno_settingNull() {
                return this.IsNull(this.tabletblRmsConfig.planno_settingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setplanno_settingNull() {
                this[this.tabletblRmsConfig.planno_settingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectedNull() {
                return this.IsNull(this.tabletblRmsConfig.connectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectedNull() {
                this[this.tabletblRmsConfig.connectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishwstatus1Null() {
                return this.IsNull(this.tabletblRmsConfig.hwstatus1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethwstatus1Null() {
                this[this.tabletblRmsConfig.hwstatus1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishwstatus2Null() {
                return this.IsNull(this.tabletblRmsConfig.hwstatus2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethwstatus2Null() {
                this[this.tabletblRmsConfig.hwstatus2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishwstatus3Null() {
                return this.IsNull(this.tabletblRmsConfig.hwstatus3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethwstatus3Null() {
                this[this.tabletblRmsConfig.hwstatus3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishwstatus4Null() {
                return this.IsNull(this.tabletblRmsConfig.hwstatus4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethwstatus4Null() {
                this[this.tabletblRmsConfig.hwstatus4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeviceErrNull() {
                return this.IsNull(this.tabletblRmsConfig.DeviceErrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeviceErrNull() {
                this[this.tabletblRmsConfig.DeviceErrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabineteOpenNull() {
                return this.IsNull(this.tabletblRmsConfig.CabineteOpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabineteOpenNull() {
                this[this.tabletblRmsConfig.CabineteOpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLED_ModuleErrNull() {
                return this.IsNull(this.tabletblRmsConfig.LED_ModuleErrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLED_ModuleErrNull() {
                this[this.tabletblRmsConfig.LED_ModuleErrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDownLinkErrNull() {
                return this.IsNull(this.tabletblRmsConfig.DownLinkErrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDownLinkErrNull() {
                this[this.tabletblRmsConfig.DownLinkErrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUplinkErrNull() {
                return this.IsNull(this.tabletblRmsConfig.UplinkErrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUplinkErrNull() {
                this[this.tabletblRmsConfig.UplinkErrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplayErrNull() {
                return this.IsNull(this.tabletblRmsConfig.DisplayErrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplayErrNull() {
                this[this.tabletblRmsConfig.DisplayErrColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblRMSModeRow : global::System.Data.DataRow {
            
            private tblRMSModeDataTable tabletblRMSMode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRMSModeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRMSMode = ((tblRMSModeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint value {
                get {
                    try {
                        return ((uint)(this[this.tabletblRMSMode.valueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRMSMode\' 中資料行 \'value\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRMSMode.valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string display {
                get {
                    try {
                        return ((string)(this[this.tabletblRMSMode.displayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRMSMode\' 中資料行 \'display\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRMSMode.displayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalueNull() {
                return this.IsNull(this.tabletblRMSMode.valueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalueNull() {
                this[this.tabletblRMSMode.valueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdisplayNull() {
                return this.IsNull(this.tabletblRMSMode.displayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdisplayNull() {
                this[this.tabletblRMSMode.displayColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblFileAttrRowChangeEvent : global::System.EventArgs {
            
            private tblFileAttrRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFileAttrRowChangeEvent(tblFileAttrRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFileAttrRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblSecTrafficDataRowChangeEvent : global::System.EventArgs {
            
            private tblSecTrafficDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecTrafficDataRowChangeEvent(tblSecTrafficDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecTrafficDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblRGS_ConfigRowChangeEvent : global::System.EventArgs {
            
            private tblRGS_ConfigRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGS_ConfigRowChangeEvent(tblRGS_ConfigRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGS_ConfigRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblIconsRowChangeEvent : global::System.EventArgs {
            
            private tblIconsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIconsRowChangeEvent(tblIconsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIconsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblRGSMainRowChangeEvent : global::System.EventArgs {
            
            private tblRGSMainRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSMainRowChangeEvent(tblRGSMainRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSMainRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblRGSModeRowChangeEvent : global::System.EventArgs {
            
            private tblRGSModeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSModeRowChangeEvent(tblRGSModeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRGSModeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblRmsConfigRowChangeEvent : global::System.EventArgs {
            
            private tblRmsConfigRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRmsConfigRowChangeEvent(tblRmsConfigRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRmsConfigRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblRMSModeRowChangeEvent : global::System.EventArgs {
            
            private tblRMSModeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRMSModeRowChangeEvent(tblRMSModeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRMSModeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591