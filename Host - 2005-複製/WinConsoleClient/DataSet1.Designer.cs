//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4927
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WinConsoleClient {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private tblVD5MinDataTable tabletblVD5Min;
        
        private tblVI5MinDataTable tabletblVI5Min;
        
        private tblRD5MinDataTable tabletblRD5Min;
        
        private tblWD5MinDataTable tabletblWD5Min;
        
        private tblLSDataDataTable tabletblLSData;
        
        private tblBSDataDataTable tabletblBSData;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblVD5Min"] != null)) {
                    base.Tables.Add(new tblVD5MinDataTable(ds.Tables["tblVD5Min"]));
                }
                if ((ds.Tables["tblVI5Min"] != null)) {
                    base.Tables.Add(new tblVI5MinDataTable(ds.Tables["tblVI5Min"]));
                }
                if ((ds.Tables["tblRD5Min"] != null)) {
                    base.Tables.Add(new tblRD5MinDataTable(ds.Tables["tblRD5Min"]));
                }
                if ((ds.Tables["tblWD5Min"] != null)) {
                    base.Tables.Add(new tblWD5MinDataTable(ds.Tables["tblWD5Min"]));
                }
                if ((ds.Tables["tblLSData"] != null)) {
                    base.Tables.Add(new tblLSDataDataTable(ds.Tables["tblLSData"]));
                }
                if ((ds.Tables["tblBSData"] != null)) {
                    base.Tables.Add(new tblBSDataDataTable(ds.Tables["tblBSData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblVD5MinDataTable tblVD5Min {
            get {
                return this.tabletblVD5Min;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblVI5MinDataTable tblVI5Min {
            get {
                return this.tabletblVI5Min;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRD5MinDataTable tblRD5Min {
            get {
                return this.tabletblRD5Min;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblWD5MinDataTable tblWD5Min {
            get {
                return this.tabletblWD5Min;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblLSDataDataTable tblLSData {
            get {
                return this.tabletblLSData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblBSDataDataTable tblBSData {
            get {
                return this.tabletblBSData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tblVD5Min"] != null)) {
                    base.Tables.Add(new tblVD5MinDataTable(ds.Tables["tblVD5Min"]));
                }
                if ((ds.Tables["tblVI5Min"] != null)) {
                    base.Tables.Add(new tblVI5MinDataTable(ds.Tables["tblVI5Min"]));
                }
                if ((ds.Tables["tblRD5Min"] != null)) {
                    base.Tables.Add(new tblRD5MinDataTable(ds.Tables["tblRD5Min"]));
                }
                if ((ds.Tables["tblWD5Min"] != null)) {
                    base.Tables.Add(new tblWD5MinDataTable(ds.Tables["tblWD5Min"]));
                }
                if ((ds.Tables["tblLSData"] != null)) {
                    base.Tables.Add(new tblLSDataDataTable(ds.Tables["tblLSData"]));
                }
                if ((ds.Tables["tblBSData"] != null)) {
                    base.Tables.Add(new tblBSDataDataTable(ds.Tables["tblBSData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletblVD5Min = ((tblVD5MinDataTable)(base.Tables["tblVD5Min"]));
            if ((initTable == true)) {
                if ((this.tabletblVD5Min != null)) {
                    this.tabletblVD5Min.InitVars();
                }
            }
            this.tabletblVI5Min = ((tblVI5MinDataTable)(base.Tables["tblVI5Min"]));
            if ((initTable == true)) {
                if ((this.tabletblVI5Min != null)) {
                    this.tabletblVI5Min.InitVars();
                }
            }
            this.tabletblRD5Min = ((tblRD5MinDataTable)(base.Tables["tblRD5Min"]));
            if ((initTable == true)) {
                if ((this.tabletblRD5Min != null)) {
                    this.tabletblRD5Min.InitVars();
                }
            }
            this.tabletblWD5Min = ((tblWD5MinDataTable)(base.Tables["tblWD5Min"]));
            if ((initTable == true)) {
                if ((this.tabletblWD5Min != null)) {
                    this.tabletblWD5Min.InitVars();
                }
            }
            this.tabletblLSData = ((tblLSDataDataTable)(base.Tables["tblLSData"]));
            if ((initTable == true)) {
                if ((this.tabletblLSData != null)) {
                    this.tabletblLSData.InitVars();
                }
            }
            this.tabletblBSData = ((tblBSDataDataTable)(base.Tables["tblBSData"]));
            if ((initTable == true)) {
                if ((this.tabletblBSData != null)) {
                    this.tabletblBSData.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletblVD5Min = new tblVD5MinDataTable();
            base.Tables.Add(this.tabletblVD5Min);
            this.tabletblVI5Min = new tblVI5MinDataTable();
            base.Tables.Add(this.tabletblVI5Min);
            this.tabletblRD5Min = new tblRD5MinDataTable();
            base.Tables.Add(this.tabletblRD5Min);
            this.tabletblWD5Min = new tblWD5MinDataTable();
            base.Tables.Add(this.tabletblWD5Min);
            this.tabletblLSData = new tblLSDataDataTable();
            base.Tables.Add(this.tabletblLSData);
            this.tabletblBSData = new tblBSDataDataTable();
            base.Tables.Add(this.tabletblBSData);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblVD5Min() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblVI5Min() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblRD5Min() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblWD5Min() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblLSData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblBSData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tblVD5MinRowChangeEventHandler(object sender, tblVD5MinRowChangeEvent e);
        
        public delegate void tblVI5MinRowChangeEventHandler(object sender, tblVI5MinRowChangeEvent e);
        
        public delegate void tblRD5MinRowChangeEventHandler(object sender, tblRD5MinRowChangeEvent e);
        
        public delegate void tblWD5MinRowChangeEventHandler(object sender, tblWD5MinRowChangeEvent e);
        
        public delegate void tblLSDataRowChangeEventHandler(object sender, tblLSDataRowChangeEvent e);
        
        public delegate void tblBSDataRowChangeEventHandler(object sender, tblBSDataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblVD5MinDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDeviceName;
            
            private global::System.Data.DataColumn columnSpeed;
            
            private global::System.Data.DataColumn columnVol;
            
            private global::System.Data.DataColumn columnOccupancy;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnInterval;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVD5MinDataTable() {
                this.TableName = "tblVD5Min";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblVD5MinDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblVD5MinDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeviceNameColumn {
                get {
                    return this.columnDeviceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpeedColumn {
                get {
                    return this.columnSpeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VolColumn {
                get {
                    return this.columnVol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OccupancyColumn {
                get {
                    return this.columnOccupancy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntervalColumn {
                get {
                    return this.columnInterval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVD5MinRow this[int index] {
                get {
                    return ((tblVD5MinRow)(this.Rows[index]));
                }
            }
            
            public event tblVD5MinRowChangeEventHandler tblVD5MinRowChanging;
            
            public event tblVD5MinRowChangeEventHandler tblVD5MinRowChanged;
            
            public event tblVD5MinRowChangeEventHandler tblVD5MinRowDeleting;
            
            public event tblVD5MinRowChangeEventHandler tblVD5MinRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblVD5MinRow(tblVD5MinRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVD5MinRow AddtblVD5MinRow(string DeviceName, int Speed, int Vol, int Occupancy, int Length, int Interval) {
                tblVD5MinRow rowtblVD5MinRow = ((tblVD5MinRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeviceName,
                        Speed,
                        Vol,
                        Occupancy,
                        Length,
                        Interval};
                rowtblVD5MinRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblVD5MinRow);
                return rowtblVD5MinRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblVD5MinDataTable cln = ((tblVD5MinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblVD5MinDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeviceName = base.Columns["DeviceName"];
                this.columnSpeed = base.Columns["Speed"];
                this.columnVol = base.Columns["Vol"];
                this.columnOccupancy = base.Columns["Occupancy"];
                this.columnLength = base.Columns["Length"];
                this.columnInterval = base.Columns["Interval"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeviceName = new global::System.Data.DataColumn("DeviceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceName);
                this.columnSpeed = new global::System.Data.DataColumn("Speed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeed);
                this.columnVol = new global::System.Data.DataColumn("Vol", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVol);
                this.columnOccupancy = new global::System.Data.DataColumn("Occupancy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOccupancy);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnInterval = new global::System.Data.DataColumn("Interval", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterval);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVD5MinRow NewtblVD5MinRow() {
                return ((tblVD5MinRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblVD5MinRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblVD5MinRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblVD5MinRowChanged != null)) {
                    this.tblVD5MinRowChanged(this, new tblVD5MinRowChangeEvent(((tblVD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblVD5MinRowChanging != null)) {
                    this.tblVD5MinRowChanging(this, new tblVD5MinRowChangeEvent(((tblVD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblVD5MinRowDeleted != null)) {
                    this.tblVD5MinRowDeleted(this, new tblVD5MinRowChangeEvent(((tblVD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblVD5MinRowDeleting != null)) {
                    this.tblVD5MinRowDeleting(this, new tblVD5MinRowChangeEvent(((tblVD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblVD5MinRow(tblVD5MinRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblVD5MinDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblVI5MinDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDeviceName;
            
            private global::System.Data.DataColumn columnDistance;
            
            private global::System.Data.DataColumn columnDegree;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVI5MinDataTable() {
                this.TableName = "tblVI5Min";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblVI5MinDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblVI5MinDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeviceNameColumn {
                get {
                    return this.columnDeviceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistanceColumn {
                get {
                    return this.columnDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DegreeColumn {
                get {
                    return this.columnDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVI5MinRow this[int index] {
                get {
                    return ((tblVI5MinRow)(this.Rows[index]));
                }
            }
            
            public event tblVI5MinRowChangeEventHandler tblVI5MinRowChanging;
            
            public event tblVI5MinRowChangeEventHandler tblVI5MinRowChanged;
            
            public event tblVI5MinRowChangeEventHandler tblVI5MinRowDeleting;
            
            public event tblVI5MinRowChangeEventHandler tblVI5MinRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblVI5MinRow(tblVI5MinRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVI5MinRow AddtblVI5MinRow(string DeviceName, int Distance, int Degree) {
                tblVI5MinRow rowtblVI5MinRow = ((tblVI5MinRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeviceName,
                        Distance,
                        Degree};
                rowtblVI5MinRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblVI5MinRow);
                return rowtblVI5MinRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblVI5MinDataTable cln = ((tblVI5MinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblVI5MinDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeviceName = base.Columns["DeviceName"];
                this.columnDistance = base.Columns["Distance"];
                this.columnDegree = base.Columns["Degree"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeviceName = new global::System.Data.DataColumn("DeviceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceName);
                this.columnDistance = new global::System.Data.DataColumn("Distance", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistance);
                this.columnDegree = new global::System.Data.DataColumn("Degree", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegree);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVI5MinRow NewtblVI5MinRow() {
                return ((tblVI5MinRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblVI5MinRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblVI5MinRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblVI5MinRowChanged != null)) {
                    this.tblVI5MinRowChanged(this, new tblVI5MinRowChangeEvent(((tblVI5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblVI5MinRowChanging != null)) {
                    this.tblVI5MinRowChanging(this, new tblVI5MinRowChangeEvent(((tblVI5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblVI5MinRowDeleted != null)) {
                    this.tblVI5MinRowDeleted(this, new tblVI5MinRowChangeEvent(((tblVI5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblVI5MinRowDeleting != null)) {
                    this.tblVI5MinRowDeleting(this, new tblVI5MinRowChangeEvent(((tblVI5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblVI5MinRow(tblVI5MinRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblVI5MinDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRD5MinDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDeviceName;
            
            private global::System.Data.DataColumn columnpluviometric;
            
            private global::System.Data.DataColumn columnDegree;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRD5MinDataTable() {
                this.TableName = "tblRD5Min";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRD5MinDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblRD5MinDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeviceNameColumn {
                get {
                    return this.columnDeviceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pluviometricColumn {
                get {
                    return this.columnpluviometric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DegreeColumn {
                get {
                    return this.columnDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRD5MinRow this[int index] {
                get {
                    return ((tblRD5MinRow)(this.Rows[index]));
                }
            }
            
            public event tblRD5MinRowChangeEventHandler tblRD5MinRowChanging;
            
            public event tblRD5MinRowChangeEventHandler tblRD5MinRowChanged;
            
            public event tblRD5MinRowChangeEventHandler tblRD5MinRowDeleting;
            
            public event tblRD5MinRowChangeEventHandler tblRD5MinRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblRD5MinRow(tblRD5MinRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRD5MinRow AddtblRD5MinRow(string DeviceName, int pluviometric, int Degree) {
                tblRD5MinRow rowtblRD5MinRow = ((tblRD5MinRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeviceName,
                        pluviometric,
                        Degree};
                rowtblRD5MinRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRD5MinRow);
                return rowtblRD5MinRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblRD5MinDataTable cln = ((tblRD5MinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRD5MinDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeviceName = base.Columns["DeviceName"];
                this.columnpluviometric = base.Columns["pluviometric"];
                this.columnDegree = base.Columns["Degree"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeviceName = new global::System.Data.DataColumn("DeviceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceName);
                this.columnpluviometric = new global::System.Data.DataColumn("pluviometric", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpluviometric);
                this.columnDegree = new global::System.Data.DataColumn("Degree", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegree);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRD5MinRow NewtblRD5MinRow() {
                return ((tblRD5MinRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRD5MinRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblRD5MinRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRD5MinRowChanged != null)) {
                    this.tblRD5MinRowChanged(this, new tblRD5MinRowChangeEvent(((tblRD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRD5MinRowChanging != null)) {
                    this.tblRD5MinRowChanging(this, new tblRD5MinRowChangeEvent(((tblRD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRD5MinRowDeleted != null)) {
                    this.tblRD5MinRowDeleted(this, new tblRD5MinRowChangeEvent(((tblRD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRD5MinRowDeleting != null)) {
                    this.tblRD5MinRowDeleting(this, new tblRD5MinRowChangeEvent(((tblRD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblRD5MinRow(tblRD5MinRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRD5MinDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblWD5MinDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDeviceName;
            
            private global::System.Data.DataColumn columnaverage_wind_speed;
            
            private global::System.Data.DataColumn columnaverage_wind_direction;
            
            private global::System.Data.DataColumn columnmax_wind_speed;
            
            private global::System.Data.DataColumn columnmax_wind_direction;
            
            private global::System.Data.DataColumn columnDegree;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblWD5MinDataTable() {
                this.TableName = "tblWD5Min";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblWD5MinDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblWD5MinDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeviceNameColumn {
                get {
                    return this.columnDeviceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn average_wind_speedColumn {
                get {
                    return this.columnaverage_wind_speed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn average_wind_directionColumn {
                get {
                    return this.columnaverage_wind_direction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn max_wind_speedColumn {
                get {
                    return this.columnmax_wind_speed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn max_wind_directionColumn {
                get {
                    return this.columnmax_wind_direction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DegreeColumn {
                get {
                    return this.columnDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblWD5MinRow this[int index] {
                get {
                    return ((tblWD5MinRow)(this.Rows[index]));
                }
            }
            
            public event tblWD5MinRowChangeEventHandler tblWD5MinRowChanging;
            
            public event tblWD5MinRowChangeEventHandler tblWD5MinRowChanged;
            
            public event tblWD5MinRowChangeEventHandler tblWD5MinRowDeleting;
            
            public event tblWD5MinRowChangeEventHandler tblWD5MinRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblWD5MinRow(tblWD5MinRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblWD5MinRow AddtblWD5MinRow(string DeviceName, int average_wind_speed, int average_wind_direction, int max_wind_speed, int max_wind_direction, int Degree) {
                tblWD5MinRow rowtblWD5MinRow = ((tblWD5MinRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeviceName,
                        average_wind_speed,
                        average_wind_direction,
                        max_wind_speed,
                        max_wind_direction,
                        Degree};
                rowtblWD5MinRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblWD5MinRow);
                return rowtblWD5MinRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblWD5MinDataTable cln = ((tblWD5MinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblWD5MinDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeviceName = base.Columns["DeviceName"];
                this.columnaverage_wind_speed = base.Columns["average_wind_speed"];
                this.columnaverage_wind_direction = base.Columns["average_wind_direction"];
                this.columnmax_wind_speed = base.Columns["max_wind_speed"];
                this.columnmax_wind_direction = base.Columns["max_wind_direction"];
                this.columnDegree = base.Columns["Degree"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeviceName = new global::System.Data.DataColumn("DeviceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceName);
                this.columnaverage_wind_speed = new global::System.Data.DataColumn("average_wind_speed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaverage_wind_speed);
                this.columnaverage_wind_direction = new global::System.Data.DataColumn("average_wind_direction", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaverage_wind_direction);
                this.columnmax_wind_speed = new global::System.Data.DataColumn("max_wind_speed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_wind_speed);
                this.columnmax_wind_direction = new global::System.Data.DataColumn("max_wind_direction", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_wind_direction);
                this.columnDegree = new global::System.Data.DataColumn("Degree", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegree);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblWD5MinRow NewtblWD5MinRow() {
                return ((tblWD5MinRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblWD5MinRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblWD5MinRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblWD5MinRowChanged != null)) {
                    this.tblWD5MinRowChanged(this, new tblWD5MinRowChangeEvent(((tblWD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblWD5MinRowChanging != null)) {
                    this.tblWD5MinRowChanging(this, new tblWD5MinRowChangeEvent(((tblWD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblWD5MinRowDeleted != null)) {
                    this.tblWD5MinRowDeleted(this, new tblWD5MinRowChangeEvent(((tblWD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblWD5MinRowDeleting != null)) {
                    this.tblWD5MinRowDeleting(this, new tblWD5MinRowChangeEvent(((tblWD5MinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblWD5MinRow(tblWD5MinRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblWD5MinDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblLSDataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDeviceName;
            
            private global::System.Data.DataColumn columnmon_var;
            
            private global::System.Data.DataColumn columnday_var;
            
            private global::System.Data.DataColumn columnDegree;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLSDataDataTable() {
                this.TableName = "tblLSData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblLSDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblLSDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeviceNameColumn {
                get {
                    return this.columnDeviceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mon_varColumn {
                get {
                    return this.columnmon_var;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn day_varColumn {
                get {
                    return this.columnday_var;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DegreeColumn {
                get {
                    return this.columnDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLSDataRow this[int index] {
                get {
                    return ((tblLSDataRow)(this.Rows[index]));
                }
            }
            
            public event tblLSDataRowChangeEventHandler tblLSDataRowChanging;
            
            public event tblLSDataRowChangeEventHandler tblLSDataRowChanged;
            
            public event tblLSDataRowChangeEventHandler tblLSDataRowDeleting;
            
            public event tblLSDataRowChangeEventHandler tblLSDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblLSDataRow(tblLSDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLSDataRow AddtblLSDataRow(string DeviceName, int mon_var, int day_var, int Degree) {
                tblLSDataRow rowtblLSDataRow = ((tblLSDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeviceName,
                        mon_var,
                        day_var,
                        Degree};
                rowtblLSDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblLSDataRow);
                return rowtblLSDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblLSDataDataTable cln = ((tblLSDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblLSDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeviceName = base.Columns["DeviceName"];
                this.columnmon_var = base.Columns["mon_var"];
                this.columnday_var = base.Columns["day_var"];
                this.columnDegree = base.Columns["Degree"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeviceName = new global::System.Data.DataColumn("DeviceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceName);
                this.columnmon_var = new global::System.Data.DataColumn("mon_var", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmon_var);
                this.columnday_var = new global::System.Data.DataColumn("day_var", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnday_var);
                this.columnDegree = new global::System.Data.DataColumn("Degree", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegree);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLSDataRow NewtblLSDataRow() {
                return ((tblLSDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblLSDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblLSDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblLSDataRowChanged != null)) {
                    this.tblLSDataRowChanged(this, new tblLSDataRowChangeEvent(((tblLSDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblLSDataRowChanging != null)) {
                    this.tblLSDataRowChanging(this, new tblLSDataRowChangeEvent(((tblLSDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblLSDataRowDeleted != null)) {
                    this.tblLSDataRowDeleted(this, new tblLSDataRowChangeEvent(((tblLSDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblLSDataRowDeleting != null)) {
                    this.tblLSDataRowDeleting(this, new tblLSDataRowChangeEvent(((tblLSDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblLSDataRow(tblLSDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblLSDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblBSDataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDeviceName;
            
            private global::System.Data.DataColumn columnslope;
            
            private global::System.Data.DataColumn columnshift;
            
            private global::System.Data.DataColumn columnsink;
            
            private global::System.Data.DataColumn columnDegree;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBSDataDataTable() {
                this.TableName = "tblBSData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblBSDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblBSDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeviceNameColumn {
                get {
                    return this.columnDeviceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slopeColumn {
                get {
                    return this.columnslope;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shiftColumn {
                get {
                    return this.columnshift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sinkColumn {
                get {
                    return this.columnsink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DegreeColumn {
                get {
                    return this.columnDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBSDataRow this[int index] {
                get {
                    return ((tblBSDataRow)(this.Rows[index]));
                }
            }
            
            public event tblBSDataRowChangeEventHandler tblBSDataRowChanging;
            
            public event tblBSDataRowChangeEventHandler tblBSDataRowChanged;
            
            public event tblBSDataRowChangeEventHandler tblBSDataRowDeleting;
            
            public event tblBSDataRowChangeEventHandler tblBSDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblBSDataRow(tblBSDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBSDataRow AddtblBSDataRow(string DeviceName, int slope, int shift, int sink, int Degree) {
                tblBSDataRow rowtblBSDataRow = ((tblBSDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeviceName,
                        slope,
                        shift,
                        sink,
                        Degree};
                rowtblBSDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblBSDataRow);
                return rowtblBSDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblBSDataDataTable cln = ((tblBSDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblBSDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeviceName = base.Columns["DeviceName"];
                this.columnslope = base.Columns["slope"];
                this.columnshift = base.Columns["shift"];
                this.columnsink = base.Columns["sink"];
                this.columnDegree = base.Columns["Degree"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeviceName = new global::System.Data.DataColumn("DeviceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceName);
                this.columnslope = new global::System.Data.DataColumn("slope", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslope);
                this.columnshift = new global::System.Data.DataColumn("shift", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshift);
                this.columnsink = new global::System.Data.DataColumn("sink", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsink);
                this.columnDegree = new global::System.Data.DataColumn("Degree", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegree);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBSDataRow NewtblBSDataRow() {
                return ((tblBSDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblBSDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblBSDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblBSDataRowChanged != null)) {
                    this.tblBSDataRowChanged(this, new tblBSDataRowChangeEvent(((tblBSDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblBSDataRowChanging != null)) {
                    this.tblBSDataRowChanging(this, new tblBSDataRowChangeEvent(((tblBSDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblBSDataRowDeleted != null)) {
                    this.tblBSDataRowDeleted(this, new tblBSDataRowChangeEvent(((tblBSDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblBSDataRowDeleting != null)) {
                    this.tblBSDataRowDeleting(this, new tblBSDataRowChangeEvent(((tblBSDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblBSDataRow(tblBSDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblBSDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblVD5MinRow : global::System.Data.DataRow {
            
            private tblVD5MinDataTable tabletblVD5Min;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblVD5MinRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblVD5Min = ((tblVD5MinDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeviceName {
                get {
                    try {
                        return ((string)(this[this.tabletblVD5Min.DeviceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblVD5Min\' 中資料行 \'DeviceName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblVD5Min.DeviceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Speed {
                get {
                    try {
                        return ((int)(this[this.tabletblVD5Min.SpeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblVD5Min\' 中資料行 \'Speed\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblVD5Min.SpeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Vol {
                get {
                    try {
                        return ((int)(this[this.tabletblVD5Min.VolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblVD5Min\' 中資料行 \'Vol\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblVD5Min.VolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Occupancy {
                get {
                    try {
                        return ((int)(this[this.tabletblVD5Min.OccupancyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblVD5Min\' 中資料行 \'Occupancy\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblVD5Min.OccupancyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Length {
                get {
                    try {
                        return ((int)(this[this.tabletblVD5Min.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblVD5Min\' 中資料行 \'Length\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblVD5Min.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Interval {
                get {
                    try {
                        return ((int)(this[this.tabletblVD5Min.IntervalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblVD5Min\' 中資料行 \'Interval\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblVD5Min.IntervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeviceNameNull() {
                return this.IsNull(this.tabletblVD5Min.DeviceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeviceNameNull() {
                this[this.tabletblVD5Min.DeviceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpeedNull() {
                return this.IsNull(this.tabletblVD5Min.SpeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpeedNull() {
                this[this.tabletblVD5Min.SpeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVolNull() {
                return this.IsNull(this.tabletblVD5Min.VolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVolNull() {
                this[this.tabletblVD5Min.VolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOccupancyNull() {
                return this.IsNull(this.tabletblVD5Min.OccupancyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOccupancyNull() {
                this[this.tabletblVD5Min.OccupancyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tabletblVD5Min.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tabletblVD5Min.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntervalNull() {
                return this.IsNull(this.tabletblVD5Min.IntervalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntervalNull() {
                this[this.tabletblVD5Min.IntervalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblVI5MinRow : global::System.Data.DataRow {
            
            private tblVI5MinDataTable tabletblVI5Min;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblVI5MinRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblVI5Min = ((tblVI5MinDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeviceName {
                get {
                    try {
                        return ((string)(this[this.tabletblVI5Min.DeviceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblVI5Min\' 中資料行 \'DeviceName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblVI5Min.DeviceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Distance {
                get {
                    try {
                        return ((int)(this[this.tabletblVI5Min.DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblVI5Min\' 中資料行 \'Distance\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblVI5Min.DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Degree {
                get {
                    try {
                        return ((int)(this[this.tabletblVI5Min.DegreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblVI5Min\' 中資料行 \'Degree\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblVI5Min.DegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeviceNameNull() {
                return this.IsNull(this.tabletblVI5Min.DeviceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeviceNameNull() {
                this[this.tabletblVI5Min.DeviceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistanceNull() {
                return this.IsNull(this.tabletblVI5Min.DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistanceNull() {
                this[this.tabletblVI5Min.DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeNull() {
                return this.IsNull(this.tabletblVI5Min.DegreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeNull() {
                this[this.tabletblVI5Min.DegreeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblRD5MinRow : global::System.Data.DataRow {
            
            private tblRD5MinDataTable tabletblRD5Min;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblRD5MinRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRD5Min = ((tblRD5MinDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeviceName {
                get {
                    try {
                        return ((string)(this[this.tabletblRD5Min.DeviceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRD5Min\' 中資料行 \'DeviceName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRD5Min.DeviceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int pluviometric {
                get {
                    try {
                        return ((int)(this[this.tabletblRD5Min.pluviometricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRD5Min\' 中資料行 \'pluviometric\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRD5Min.pluviometricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Degree {
                get {
                    try {
                        return ((int)(this[this.tabletblRD5Min.DegreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblRD5Min\' 中資料行 \'Degree\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblRD5Min.DegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeviceNameNull() {
                return this.IsNull(this.tabletblRD5Min.DeviceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeviceNameNull() {
                this[this.tabletblRD5Min.DeviceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspluviometricNull() {
                return this.IsNull(this.tabletblRD5Min.pluviometricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpluviometricNull() {
                this[this.tabletblRD5Min.pluviometricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeNull() {
                return this.IsNull(this.tabletblRD5Min.DegreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeNull() {
                this[this.tabletblRD5Min.DegreeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblWD5MinRow : global::System.Data.DataRow {
            
            private tblWD5MinDataTable tabletblWD5Min;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblWD5MinRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblWD5Min = ((tblWD5MinDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeviceName {
                get {
                    try {
                        return ((string)(this[this.tabletblWD5Min.DeviceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblWD5Min\' 中資料行 \'DeviceName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblWD5Min.DeviceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int average_wind_speed {
                get {
                    try {
                        return ((int)(this[this.tabletblWD5Min.average_wind_speedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblWD5Min\' 中資料行 \'average_wind_speed\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblWD5Min.average_wind_speedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int average_wind_direction {
                get {
                    try {
                        return ((int)(this[this.tabletblWD5Min.average_wind_directionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblWD5Min\' 中資料行 \'average_wind_direction\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblWD5Min.average_wind_directionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int max_wind_speed {
                get {
                    try {
                        return ((int)(this[this.tabletblWD5Min.max_wind_speedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblWD5Min\' 中資料行 \'max_wind_speed\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblWD5Min.max_wind_speedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int max_wind_direction {
                get {
                    try {
                        return ((int)(this[this.tabletblWD5Min.max_wind_directionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblWD5Min\' 中資料行 \'max_wind_direction\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblWD5Min.max_wind_directionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Degree {
                get {
                    try {
                        return ((int)(this[this.tabletblWD5Min.DegreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblWD5Min\' 中資料行 \'Degree\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblWD5Min.DegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeviceNameNull() {
                return this.IsNull(this.tabletblWD5Min.DeviceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeviceNameNull() {
                this[this.tabletblWD5Min.DeviceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaverage_wind_speedNull() {
                return this.IsNull(this.tabletblWD5Min.average_wind_speedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaverage_wind_speedNull() {
                this[this.tabletblWD5Min.average_wind_speedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaverage_wind_directionNull() {
                return this.IsNull(this.tabletblWD5Min.average_wind_directionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaverage_wind_directionNull() {
                this[this.tabletblWD5Min.average_wind_directionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismax_wind_speedNull() {
                return this.IsNull(this.tabletblWD5Min.max_wind_speedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmax_wind_speedNull() {
                this[this.tabletblWD5Min.max_wind_speedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismax_wind_directionNull() {
                return this.IsNull(this.tabletblWD5Min.max_wind_directionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmax_wind_directionNull() {
                this[this.tabletblWD5Min.max_wind_directionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeNull() {
                return this.IsNull(this.tabletblWD5Min.DegreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeNull() {
                this[this.tabletblWD5Min.DegreeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblLSDataRow : global::System.Data.DataRow {
            
            private tblLSDataDataTable tabletblLSData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblLSDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblLSData = ((tblLSDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeviceName {
                get {
                    try {
                        return ((string)(this[this.tabletblLSData.DeviceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblLSData\' 中資料行 \'DeviceName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblLSData.DeviceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int mon_var {
                get {
                    try {
                        return ((int)(this[this.tabletblLSData.mon_varColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblLSData\' 中資料行 \'mon_var\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblLSData.mon_varColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int day_var {
                get {
                    try {
                        return ((int)(this[this.tabletblLSData.day_varColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblLSData\' 中資料行 \'day_var\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblLSData.day_varColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Degree {
                get {
                    try {
                        return ((int)(this[this.tabletblLSData.DegreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblLSData\' 中資料行 \'Degree\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblLSData.DegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeviceNameNull() {
                return this.IsNull(this.tabletblLSData.DeviceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeviceNameNull() {
                this[this.tabletblLSData.DeviceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismon_varNull() {
                return this.IsNull(this.tabletblLSData.mon_varColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmon_varNull() {
                this[this.tabletblLSData.mon_varColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isday_varNull() {
                return this.IsNull(this.tabletblLSData.day_varColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setday_varNull() {
                this[this.tabletblLSData.day_varColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeNull() {
                return this.IsNull(this.tabletblLSData.DegreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeNull() {
                this[this.tabletblLSData.DegreeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblBSDataRow : global::System.Data.DataRow {
            
            private tblBSDataDataTable tabletblBSData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblBSDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblBSData = ((tblBSDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeviceName {
                get {
                    try {
                        return ((string)(this[this.tabletblBSData.DeviceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblBSData\' 中資料行 \'DeviceName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblBSData.DeviceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int slope {
                get {
                    try {
                        return ((int)(this[this.tabletblBSData.slopeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblBSData\' 中資料行 \'slope\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblBSData.slopeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shift {
                get {
                    try {
                        return ((int)(this[this.tabletblBSData.shiftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblBSData\' 中資料行 \'shift\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblBSData.shiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sink {
                get {
                    try {
                        return ((int)(this[this.tabletblBSData.sinkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblBSData\' 中資料行 \'sink\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblBSData.sinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Degree {
                get {
                    try {
                        return ((int)(this[this.tabletblBSData.DegreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'tblBSData\' 中資料行 \'Degree\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletblBSData.DegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeviceNameNull() {
                return this.IsNull(this.tabletblBSData.DeviceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeviceNameNull() {
                this[this.tabletblBSData.DeviceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslopeNull() {
                return this.IsNull(this.tabletblBSData.slopeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslopeNull() {
                this[this.tabletblBSData.slopeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshiftNull() {
                return this.IsNull(this.tabletblBSData.shiftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshiftNull() {
                this[this.tabletblBSData.shiftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssinkNull() {
                return this.IsNull(this.tabletblBSData.sinkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsinkNull() {
                this[this.tabletblBSData.sinkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDegreeNull() {
                return this.IsNull(this.tabletblBSData.DegreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDegreeNull() {
                this[this.tabletblBSData.DegreeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblVD5MinRowChangeEvent : global::System.EventArgs {
            
            private tblVD5MinRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVD5MinRowChangeEvent(tblVD5MinRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVD5MinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblVI5MinRowChangeEvent : global::System.EventArgs {
            
            private tblVI5MinRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVI5MinRowChangeEvent(tblVI5MinRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVI5MinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblRD5MinRowChangeEvent : global::System.EventArgs {
            
            private tblRD5MinRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRD5MinRowChangeEvent(tblRD5MinRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblRD5MinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblWD5MinRowChangeEvent : global::System.EventArgs {
            
            private tblWD5MinRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblWD5MinRowChangeEvent(tblWD5MinRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblWD5MinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblLSDataRowChangeEvent : global::System.EventArgs {
            
            private tblLSDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLSDataRowChangeEvent(tblLSDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLSDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblBSDataRowChangeEvent : global::System.EventArgs {
            
            private tblBSDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBSDataRowChangeEvent(tblBSDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBSDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591