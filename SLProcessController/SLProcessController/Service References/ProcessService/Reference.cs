//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.1
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SLProcessController.ProcessService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HostInfo", Namespace="http://tempuri.org/")]
    public partial class HostInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string HostNameField;
        
        private string IPField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessInfo", Namespace="http://tempuri.org/")]
    public partial class ProcessInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ProcessNameField;
        
        private int ConsolePortField;
        
        private string ExecutiongStringField;
        
        private int StateField;
        
        private double CPU_TimeField;
        
        private long MermoryField;
        
        private bool IsAliveField;
        
        private int PIDField;
        
        private int DataQueueCntField;
        
        private string HostIPField;
        
        private string MFCC_TYPEField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int ConsolePort {
            get {
                return this.ConsolePortField;
            }
            set {
                if ((this.ConsolePortField.Equals(value) != true)) {
                    this.ConsolePortField = value;
                    this.RaisePropertyChanged("ConsolePort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ExecutiongString {
            get {
                return this.ExecutiongStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutiongStringField, value) != true)) {
                    this.ExecutiongStringField = value;
                    this.RaisePropertyChanged("ExecutiongString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public double CPU_Time {
            get {
                return this.CPU_TimeField;
            }
            set {
                if ((this.CPU_TimeField.Equals(value) != true)) {
                    this.CPU_TimeField = value;
                    this.RaisePropertyChanged("CPU_Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public long Mermory {
            get {
                return this.MermoryField;
            }
            set {
                if ((this.MermoryField.Equals(value) != true)) {
                    this.MermoryField = value;
                    this.RaisePropertyChanged("Mermory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public bool IsAlive {
            get {
                return this.IsAliveField;
            }
            set {
                if ((this.IsAliveField.Equals(value) != true)) {
                    this.IsAliveField = value;
                    this.RaisePropertyChanged("IsAlive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int PID {
            get {
                return this.PIDField;
            }
            set {
                if ((this.PIDField.Equals(value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int DataQueueCnt {
            get {
                return this.DataQueueCntField;
            }
            set {
                if ((this.DataQueueCntField.Equals(value) != true)) {
                    this.DataQueueCntField = value;
                    this.RaisePropertyChanged("DataQueueCnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string HostIP {
            get {
                return this.HostIPField;
            }
            set {
                if ((object.ReferenceEquals(this.HostIPField, value) != true)) {
                    this.HostIPField = value;
                    this.RaisePropertyChanged("HostIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string MFCC_TYPE {
            get {
                return this.MFCC_TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.MFCC_TYPEField, value) != true)) {
                    this.MFCC_TYPEField = value;
                    this.RaisePropertyChanged("MFCC_TYPE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProcessService.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.IAsyncResult BeginHelloWorld(SLProcessController.ProcessService.HelloWorldRequest request, System.AsyncCallback callback, object asyncState);
        
        SLProcessController.ProcessService.HelloWorldResponse EndHelloWorld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getHostInfos", ReplyAction="*")]
        System.IAsyncResult BegingetHostInfos(SLProcessController.ProcessService.getHostInfosRequest request, System.AsyncCallback callback, object asyncState);
        
        SLProcessController.ProcessService.getHostInfosResponse EndgetHostInfos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ChangeProcessState", ReplyAction="*")]
        System.IAsyncResult BeginChangeProcessState(SLProcessController.ProcessService.ChangeProcessStateRequest request, System.AsyncCallback callback, object asyncState);
        
        SLProcessController.ProcessService.ChangeProcessStateResponse EndChangeProcessState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LogMfccStart", ReplyAction="*")]
        System.IAsyncResult BeginLogMfccStart(SLProcessController.ProcessService.LogMfccStartRequest request, System.AsyncCallback callback, object asyncState);
        
        SLProcessController.ProcessService.LogMfccStartResponse EndLogMfccStart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getDbQueueCnt", ReplyAction="*")]
        System.IAsyncResult BegingetDbQueueCnt(SLProcessController.ProcessService.getDbQueueCntRequest request, System.AsyncCallback callback, object asyncState);
        
        SLProcessController.ProcessService.getDbQueueCntResponse EndgetDbQueueCnt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetProcessInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetProcessInfo(SLProcessController.ProcessService.GetProcessInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        SLProcessController.ProcessService.GetProcessInfoResponse EndGetProcessInfo(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorld", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.HelloWorldRequestBody Body;
        
        public HelloWorldRequest() {
        }
        
        public HelloWorldRequest(SLProcessController.ProcessService.HelloWorldRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class HelloWorldRequestBody {
        
        public HelloWorldRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorldResponse", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.HelloWorldResponseBody Body;
        
        public HelloWorldResponse() {
        }
        
        public HelloWorldResponse(SLProcessController.ProcessService.HelloWorldResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HelloWorldResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string HelloWorldResult;
        
        public HelloWorldResponseBody() {
        }
        
        public HelloWorldResponseBody(string HelloWorldResult) {
            this.HelloWorldResult = HelloWorldResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getHostInfosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getHostInfos", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.getHostInfosRequestBody Body;
        
        public getHostInfosRequest() {
        }
        
        public getHostInfosRequest(SLProcessController.ProcessService.getHostInfosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getHostInfosRequestBody {
        
        public getHostInfosRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getHostInfosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getHostInfosResponse", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.getHostInfosResponseBody Body;
        
        public getHostInfosResponse() {
        }
        
        public getHostInfosResponse(SLProcessController.ProcessService.getHostInfosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getHostInfosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.HostInfo> getHostInfosResult;
        
        public getHostInfosResponseBody() {
        }
        
        public getHostInfosResponseBody(System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.HostInfo> getHostInfosResult) {
            this.getHostInfosResult = getHostInfosResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeProcessStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeProcessState", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.ChangeProcessStateRequestBody Body;
        
        public ChangeProcessStateRequest() {
        }
        
        public ChangeProcessStateRequest(SLProcessController.ProcessService.ChangeProcessStateRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ChangeProcessStateRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string HostIp;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ProcessName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool bPlay;
        
        public ChangeProcessStateRequestBody() {
        }
        
        public ChangeProcessStateRequestBody(string HostIp, string ProcessName, bool bPlay) {
            this.HostIp = HostIp;
            this.ProcessName = ProcessName;
            this.bPlay = bPlay;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeProcessStateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeProcessStateResponse", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.ChangeProcessStateResponseBody Body;
        
        public ChangeProcessStateResponse() {
        }
        
        public ChangeProcessStateResponse(SLProcessController.ProcessService.ChangeProcessStateResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ChangeProcessStateResponseBody {
        
        public ChangeProcessStateResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogMfccStartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogMfccStart", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.LogMfccStartRequestBody Body;
        
        public LogMfccStartRequest() {
        }
        
        public LogMfccStartRequest(SLProcessController.ProcessService.LogMfccStartRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class LogMfccStartRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ProcessName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool bPlay;
        
        public LogMfccStartRequestBody() {
        }
        
        public LogMfccStartRequestBody(string ProcessName, bool bPlay) {
            this.ProcessName = ProcessName;
            this.bPlay = bPlay;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogMfccStartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogMfccStartResponse", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.LogMfccStartResponseBody Body;
        
        public LogMfccStartResponse() {
        }
        
        public LogMfccStartResponse(SLProcessController.ProcessService.LogMfccStartResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class LogMfccStartResponseBody {
        
        public LogMfccStartResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getDbQueueCntRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getDbQueueCnt", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.getDbQueueCntRequestBody Body;
        
        public getDbQueueCntRequest() {
        }
        
        public getDbQueueCntRequest(SLProcessController.ProcessService.getDbQueueCntRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getDbQueueCntRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string mfcc_type;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ip;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int port;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool isHost;
        
        public getDbQueueCntRequestBody() {
        }
        
        public getDbQueueCntRequestBody(string mfcc_type, string ip, int port, bool isHost) {
            this.mfcc_type = mfcc_type;
            this.ip = ip;
            this.port = port;
            this.isHost = isHost;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getDbQueueCntResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getDbQueueCntResponse", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.getDbQueueCntResponseBody Body;
        
        public getDbQueueCntResponse() {
        }
        
        public getDbQueueCntResponse(SLProcessController.ProcessService.getDbQueueCntResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getDbQueueCntResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int getDbQueueCntResult;
        
        public getDbQueueCntResponseBody() {
        }
        
        public getDbQueueCntResponseBody(int getDbQueueCntResult) {
            this.getDbQueueCntResult = getDbQueueCntResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProcessInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetProcessInfo", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.GetProcessInfoRequestBody Body;
        
        public GetProcessInfoRequest() {
        }
        
        public GetProcessInfoRequest(SLProcessController.ProcessService.GetProcessInfoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetProcessInfoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ip;
        
        public GetProcessInfoRequestBody() {
        }
        
        public GetProcessInfoRequestBody(string ip) {
            this.ip = ip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProcessInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetProcessInfoResponse", Namespace="http://tempuri.org/", Order=0)]
        public SLProcessController.ProcessService.GetProcessInfoResponseBody Body;
        
        public GetProcessInfoResponse() {
        }
        
        public GetProcessInfoResponse(SLProcessController.ProcessService.GetProcessInfoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetProcessInfoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.ProcessInfo> GetProcessInfoResult;
        
        public GetProcessInfoResponseBody() {
        }
        
        public GetProcessInfoResponseBody(System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.ProcessInfo> GetProcessInfoResult) {
            this.GetProcessInfoResult = GetProcessInfoResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : SLProcessController.ProcessService.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getHostInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getHostInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.HostInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.HostInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getDbQueueCntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getDbQueueCntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProcessInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProcessInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.ProcessInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.ProcessInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<SLProcessController.ProcessService.ServiceSoap>, SLProcessController.ProcessService.ServiceSoap {
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBegingetHostInfosDelegate;
        
        private EndOperationDelegate onEndgetHostInfosDelegate;
        
        private System.Threading.SendOrPostCallback ongetHostInfosCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeProcessStateDelegate;
        
        private EndOperationDelegate onEndChangeProcessStateDelegate;
        
        private System.Threading.SendOrPostCallback onChangeProcessStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogMfccStartDelegate;
        
        private EndOperationDelegate onEndLogMfccStartDelegate;
        
        private System.Threading.SendOrPostCallback onLogMfccStartCompletedDelegate;
        
        private BeginOperationDelegate onBegingetDbQueueCntDelegate;
        
        private EndOperationDelegate onEndgetDbQueueCntDelegate;
        
        private System.Threading.SendOrPostCallback ongetDbQueueCntCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProcessInfoDelegate;
        
        private EndOperationDelegate onEndGetProcessInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetProcessInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("無法設定 CookieContainer。請確定繫結包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<getHostInfosCompletedEventArgs> getHostInfosCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangeProcessStateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogMfccStartCompleted;
        
        public event System.EventHandler<getDbQueueCntCompletedEventArgs> getDbQueueCntCompleted;
        
        public event System.EventHandler<GetProcessInfoCompletedEventArgs> GetProcessInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLProcessController.ProcessService.ServiceSoap.BeginHelloWorld(SLProcessController.ProcessService.HelloWorldRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            SLProcessController.ProcessService.HelloWorldRequest inValue = new SLProcessController.ProcessService.HelloWorldRequest();
            inValue.Body = new SLProcessController.ProcessService.HelloWorldRequestBody();
            return ((SLProcessController.ProcessService.ServiceSoap)(this)).BeginHelloWorld(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SLProcessController.ProcessService.HelloWorldResponse SLProcessController.ProcessService.ServiceSoap.EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndHelloWorld(System.IAsyncResult result) {
            SLProcessController.ProcessService.HelloWorldResponse retVal = ((SLProcessController.ProcessService.ServiceSoap)(this)).EndHelloWorld(result);
            return retVal.Body.HelloWorldResult;
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginHelloWorld(callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = this.EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        public void HelloWorldAsync(object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, null, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLProcessController.ProcessService.ServiceSoap.BegingetHostInfos(SLProcessController.ProcessService.getHostInfosRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetHostInfos(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetHostInfos(System.AsyncCallback callback, object asyncState) {
            SLProcessController.ProcessService.getHostInfosRequest inValue = new SLProcessController.ProcessService.getHostInfosRequest();
            inValue.Body = new SLProcessController.ProcessService.getHostInfosRequestBody();
            return ((SLProcessController.ProcessService.ServiceSoap)(this)).BegingetHostInfos(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SLProcessController.ProcessService.getHostInfosResponse SLProcessController.ProcessService.ServiceSoap.EndgetHostInfos(System.IAsyncResult result) {
            return base.Channel.EndgetHostInfos(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.HostInfo> EndgetHostInfos(System.IAsyncResult result) {
            SLProcessController.ProcessService.getHostInfosResponse retVal = ((SLProcessController.ProcessService.ServiceSoap)(this)).EndgetHostInfos(result);
            return retVal.Body.getHostInfosResult;
        }
        
        private System.IAsyncResult OnBegingetHostInfos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetHostInfos(callback, asyncState);
        }
        
        private object[] OnEndgetHostInfos(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.HostInfo> retVal = this.EndgetHostInfos(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetHostInfosCompleted(object state) {
            if ((this.getHostInfosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getHostInfosCompleted(this, new getHostInfosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getHostInfosAsync() {
            this.getHostInfosAsync(null);
        }
        
        public void getHostInfosAsync(object userState) {
            if ((this.onBegingetHostInfosDelegate == null)) {
                this.onBegingetHostInfosDelegate = new BeginOperationDelegate(this.OnBegingetHostInfos);
            }
            if ((this.onEndgetHostInfosDelegate == null)) {
                this.onEndgetHostInfosDelegate = new EndOperationDelegate(this.OnEndgetHostInfos);
            }
            if ((this.ongetHostInfosCompletedDelegate == null)) {
                this.ongetHostInfosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetHostInfosCompleted);
            }
            base.InvokeAsync(this.onBegingetHostInfosDelegate, null, this.onEndgetHostInfosDelegate, this.ongetHostInfosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLProcessController.ProcessService.ServiceSoap.BeginChangeProcessState(SLProcessController.ProcessService.ChangeProcessStateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeProcessState(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginChangeProcessState(string HostIp, string ProcessName, bool bPlay, System.AsyncCallback callback, object asyncState) {
            SLProcessController.ProcessService.ChangeProcessStateRequest inValue = new SLProcessController.ProcessService.ChangeProcessStateRequest();
            inValue.Body = new SLProcessController.ProcessService.ChangeProcessStateRequestBody();
            inValue.Body.HostIp = HostIp;
            inValue.Body.ProcessName = ProcessName;
            inValue.Body.bPlay = bPlay;
            return ((SLProcessController.ProcessService.ServiceSoap)(this)).BeginChangeProcessState(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SLProcessController.ProcessService.ChangeProcessStateResponse SLProcessController.ProcessService.ServiceSoap.EndChangeProcessState(System.IAsyncResult result) {
            return base.Channel.EndChangeProcessState(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndChangeProcessState(System.IAsyncResult result) {
            SLProcessController.ProcessService.ChangeProcessStateResponse retVal = ((SLProcessController.ProcessService.ServiceSoap)(this)).EndChangeProcessState(result);
        }
        
        private System.IAsyncResult OnBeginChangeProcessState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string HostIp = ((string)(inValues[0]));
            string ProcessName = ((string)(inValues[1]));
            bool bPlay = ((bool)(inValues[2]));
            return this.BeginChangeProcessState(HostIp, ProcessName, bPlay, callback, asyncState);
        }
        
        private object[] OnEndChangeProcessState(System.IAsyncResult result) {
            this.EndChangeProcessState(result);
            return null;
        }
        
        private void OnChangeProcessStateCompleted(object state) {
            if ((this.ChangeProcessStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeProcessStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeProcessStateAsync(string HostIp, string ProcessName, bool bPlay) {
            this.ChangeProcessStateAsync(HostIp, ProcessName, bPlay, null);
        }
        
        public void ChangeProcessStateAsync(string HostIp, string ProcessName, bool bPlay, object userState) {
            if ((this.onBeginChangeProcessStateDelegate == null)) {
                this.onBeginChangeProcessStateDelegate = new BeginOperationDelegate(this.OnBeginChangeProcessState);
            }
            if ((this.onEndChangeProcessStateDelegate == null)) {
                this.onEndChangeProcessStateDelegate = new EndOperationDelegate(this.OnEndChangeProcessState);
            }
            if ((this.onChangeProcessStateCompletedDelegate == null)) {
                this.onChangeProcessStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeProcessStateCompleted);
            }
            base.InvokeAsync(this.onBeginChangeProcessStateDelegate, new object[] {
                        HostIp,
                        ProcessName,
                        bPlay}, this.onEndChangeProcessStateDelegate, this.onChangeProcessStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLProcessController.ProcessService.ServiceSoap.BeginLogMfccStart(SLProcessController.ProcessService.LogMfccStartRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogMfccStart(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginLogMfccStart(string ProcessName, bool bPlay, System.AsyncCallback callback, object asyncState) {
            SLProcessController.ProcessService.LogMfccStartRequest inValue = new SLProcessController.ProcessService.LogMfccStartRequest();
            inValue.Body = new SLProcessController.ProcessService.LogMfccStartRequestBody();
            inValue.Body.ProcessName = ProcessName;
            inValue.Body.bPlay = bPlay;
            return ((SLProcessController.ProcessService.ServiceSoap)(this)).BeginLogMfccStart(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SLProcessController.ProcessService.LogMfccStartResponse SLProcessController.ProcessService.ServiceSoap.EndLogMfccStart(System.IAsyncResult result) {
            return base.Channel.EndLogMfccStart(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndLogMfccStart(System.IAsyncResult result) {
            SLProcessController.ProcessService.LogMfccStartResponse retVal = ((SLProcessController.ProcessService.ServiceSoap)(this)).EndLogMfccStart(result);
        }
        
        private System.IAsyncResult OnBeginLogMfccStart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ProcessName = ((string)(inValues[0]));
            bool bPlay = ((bool)(inValues[1]));
            return this.BeginLogMfccStart(ProcessName, bPlay, callback, asyncState);
        }
        
        private object[] OnEndLogMfccStart(System.IAsyncResult result) {
            this.EndLogMfccStart(result);
            return null;
        }
        
        private void OnLogMfccStartCompleted(object state) {
            if ((this.LogMfccStartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogMfccStartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogMfccStartAsync(string ProcessName, bool bPlay) {
            this.LogMfccStartAsync(ProcessName, bPlay, null);
        }
        
        public void LogMfccStartAsync(string ProcessName, bool bPlay, object userState) {
            if ((this.onBeginLogMfccStartDelegate == null)) {
                this.onBeginLogMfccStartDelegate = new BeginOperationDelegate(this.OnBeginLogMfccStart);
            }
            if ((this.onEndLogMfccStartDelegate == null)) {
                this.onEndLogMfccStartDelegate = new EndOperationDelegate(this.OnEndLogMfccStart);
            }
            if ((this.onLogMfccStartCompletedDelegate == null)) {
                this.onLogMfccStartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogMfccStartCompleted);
            }
            base.InvokeAsync(this.onBeginLogMfccStartDelegate, new object[] {
                        ProcessName,
                        bPlay}, this.onEndLogMfccStartDelegate, this.onLogMfccStartCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLProcessController.ProcessService.ServiceSoap.BegingetDbQueueCnt(SLProcessController.ProcessService.getDbQueueCntRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetDbQueueCnt(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetDbQueueCnt(string mfcc_type, string ip, int port, bool isHost, System.AsyncCallback callback, object asyncState) {
            SLProcessController.ProcessService.getDbQueueCntRequest inValue = new SLProcessController.ProcessService.getDbQueueCntRequest();
            inValue.Body = new SLProcessController.ProcessService.getDbQueueCntRequestBody();
            inValue.Body.mfcc_type = mfcc_type;
            inValue.Body.ip = ip;
            inValue.Body.port = port;
            inValue.Body.isHost = isHost;
            return ((SLProcessController.ProcessService.ServiceSoap)(this)).BegingetDbQueueCnt(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SLProcessController.ProcessService.getDbQueueCntResponse SLProcessController.ProcessService.ServiceSoap.EndgetDbQueueCnt(System.IAsyncResult result) {
            return base.Channel.EndgetDbQueueCnt(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private int EndgetDbQueueCnt(System.IAsyncResult result) {
            SLProcessController.ProcessService.getDbQueueCntResponse retVal = ((SLProcessController.ProcessService.ServiceSoap)(this)).EndgetDbQueueCnt(result);
            return retVal.Body.getDbQueueCntResult;
        }
        
        private System.IAsyncResult OnBegingetDbQueueCnt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string mfcc_type = ((string)(inValues[0]));
            string ip = ((string)(inValues[1]));
            int port = ((int)(inValues[2]));
            bool isHost = ((bool)(inValues[3]));
            return this.BegingetDbQueueCnt(mfcc_type, ip, port, isHost, callback, asyncState);
        }
        
        private object[] OnEndgetDbQueueCnt(System.IAsyncResult result) {
            int retVal = this.EndgetDbQueueCnt(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetDbQueueCntCompleted(object state) {
            if ((this.getDbQueueCntCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getDbQueueCntCompleted(this, new getDbQueueCntCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getDbQueueCntAsync(string mfcc_type, string ip, int port, bool isHost) {
            this.getDbQueueCntAsync(mfcc_type, ip, port, isHost, null);
        }
        
        public void getDbQueueCntAsync(string mfcc_type, string ip, int port, bool isHost, object userState) {
            if ((this.onBegingetDbQueueCntDelegate == null)) {
                this.onBegingetDbQueueCntDelegate = new BeginOperationDelegate(this.OnBegingetDbQueueCnt);
            }
            if ((this.onEndgetDbQueueCntDelegate == null)) {
                this.onEndgetDbQueueCntDelegate = new EndOperationDelegate(this.OnEndgetDbQueueCnt);
            }
            if ((this.ongetDbQueueCntCompletedDelegate == null)) {
                this.ongetDbQueueCntCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDbQueueCntCompleted);
            }
            base.InvokeAsync(this.onBegingetDbQueueCntDelegate, new object[] {
                        mfcc_type,
                        ip,
                        port,
                        isHost}, this.onEndgetDbQueueCntDelegate, this.ongetDbQueueCntCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLProcessController.ProcessService.ServiceSoap.BeginGetProcessInfo(SLProcessController.ProcessService.GetProcessInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProcessInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetProcessInfo(string ip, System.AsyncCallback callback, object asyncState) {
            SLProcessController.ProcessService.GetProcessInfoRequest inValue = new SLProcessController.ProcessService.GetProcessInfoRequest();
            inValue.Body = new SLProcessController.ProcessService.GetProcessInfoRequestBody();
            inValue.Body.ip = ip;
            return ((SLProcessController.ProcessService.ServiceSoap)(this)).BeginGetProcessInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SLProcessController.ProcessService.GetProcessInfoResponse SLProcessController.ProcessService.ServiceSoap.EndGetProcessInfo(System.IAsyncResult result) {
            return base.Channel.EndGetProcessInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.ProcessInfo> EndGetProcessInfo(System.IAsyncResult result) {
            SLProcessController.ProcessService.GetProcessInfoResponse retVal = ((SLProcessController.ProcessService.ServiceSoap)(this)).EndGetProcessInfo(result);
            return retVal.Body.GetProcessInfoResult;
        }
        
        private System.IAsyncResult OnBeginGetProcessInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ip = ((string)(inValues[0]));
            return this.BeginGetProcessInfo(ip, callback, asyncState);
        }
        
        private object[] OnEndGetProcessInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SLProcessController.ProcessService.ProcessInfo> retVal = this.EndGetProcessInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProcessInfoCompleted(object state) {
            if ((this.GetProcessInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProcessInfoCompleted(this, new GetProcessInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProcessInfoAsync(string ip) {
            this.GetProcessInfoAsync(ip, null);
        }
        
        public void GetProcessInfoAsync(string ip, object userState) {
            if ((this.onBeginGetProcessInfoDelegate == null)) {
                this.onBeginGetProcessInfoDelegate = new BeginOperationDelegate(this.OnBeginGetProcessInfo);
            }
            if ((this.onEndGetProcessInfoDelegate == null)) {
                this.onEndGetProcessInfoDelegate = new EndOperationDelegate(this.OnEndGetProcessInfo);
            }
            if ((this.onGetProcessInfoCompletedDelegate == null)) {
                this.onGetProcessInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProcessInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetProcessInfoDelegate, new object[] {
                        ip}, this.onEndGetProcessInfoDelegate, this.onGetProcessInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SLProcessController.ProcessService.ServiceSoap CreateChannel() {
            return new ServiceSoapClientChannel(this);
        }
        
        private class ServiceSoapClientChannel : ChannelBase<SLProcessController.ProcessService.ServiceSoap>, SLProcessController.ProcessService.ServiceSoap {
            
            public ServiceSoapClientChannel(System.ServiceModel.ClientBase<SLProcessController.ProcessService.ServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginHelloWorld(SLProcessController.ProcessService.HelloWorldRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("HelloWorld", _args, callback, asyncState);
                return _result;
            }
            
            public SLProcessController.ProcessService.HelloWorldResponse EndHelloWorld(System.IAsyncResult result) {
                object[] _args = new object[0];
                SLProcessController.ProcessService.HelloWorldResponse _result = ((SLProcessController.ProcessService.HelloWorldResponse)(base.EndInvoke("HelloWorld", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetHostInfos(SLProcessController.ProcessService.getHostInfosRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getHostInfos", _args, callback, asyncState);
                return _result;
            }
            
            public SLProcessController.ProcessService.getHostInfosResponse EndgetHostInfos(System.IAsyncResult result) {
                object[] _args = new object[0];
                SLProcessController.ProcessService.getHostInfosResponse _result = ((SLProcessController.ProcessService.getHostInfosResponse)(base.EndInvoke("getHostInfos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChangeProcessState(SLProcessController.ProcessService.ChangeProcessStateRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ChangeProcessState", _args, callback, asyncState);
                return _result;
            }
            
            public SLProcessController.ProcessService.ChangeProcessStateResponse EndChangeProcessState(System.IAsyncResult result) {
                object[] _args = new object[0];
                SLProcessController.ProcessService.ChangeProcessStateResponse _result = ((SLProcessController.ProcessService.ChangeProcessStateResponse)(base.EndInvoke("ChangeProcessState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogMfccStart(SLProcessController.ProcessService.LogMfccStartRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("LogMfccStart", _args, callback, asyncState);
                return _result;
            }
            
            public SLProcessController.ProcessService.LogMfccStartResponse EndLogMfccStart(System.IAsyncResult result) {
                object[] _args = new object[0];
                SLProcessController.ProcessService.LogMfccStartResponse _result = ((SLProcessController.ProcessService.LogMfccStartResponse)(base.EndInvoke("LogMfccStart", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetDbQueueCnt(SLProcessController.ProcessService.getDbQueueCntRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getDbQueueCnt", _args, callback, asyncState);
                return _result;
            }
            
            public SLProcessController.ProcessService.getDbQueueCntResponse EndgetDbQueueCnt(System.IAsyncResult result) {
                object[] _args = new object[0];
                SLProcessController.ProcessService.getDbQueueCntResponse _result = ((SLProcessController.ProcessService.getDbQueueCntResponse)(base.EndInvoke("getDbQueueCnt", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProcessInfo(SLProcessController.ProcessService.GetProcessInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetProcessInfo", _args, callback, asyncState);
                return _result;
            }
            
            public SLProcessController.ProcessService.GetProcessInfoResponse EndGetProcessInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                SLProcessController.ProcessService.GetProcessInfoResponse _result = ((SLProcessController.ProcessService.GetProcessInfoResponse)(base.EndInvoke("GetProcessInfo", _args, result)));
                return _result;
            }
        }
    }
}
